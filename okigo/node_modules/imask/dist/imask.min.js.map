{"version":3,"file":"imask.min.js","sources":["../src/core/change-details.js","../src/core/utils.js","../src/core/action-details.js","../src/core/continuous-tail-details.js","../src/core/holder.js","../src/masked/base.js","../src/masked/factory.js","../src/masked/pattern/input-definition.js","../src/masked/pattern/fixed-definition.js","../src/masked/pattern/chunk-tail-details.js","../src/masked/pattern/cursor.js","../src/masked/regexp.js","../src/masked/pattern.js","../src/masked/range.js","../src/masked/date.js","../src/controls/mask-element.js","../src/controls/html-mask-element.js","../src/controls/html-contenteditable-mask-element.js","../src/controls/input.js","../src/masked/enum.js","../src/masked/number.js","../src/masked/function.js","../src/masked/dynamic.js","../src/masked/pipe.js","../src/index.js"],"sourcesContent":["// @flow\n\n\n/**\n  Provides details of changing model value\n  @param {Object} [details]\n  @param {string} [details.inserted] - Inserted symbols\n  @param {boolean} [details.skip] - Can skip chars\n  @param {number} [details.removeCount] - Removed symbols count\n  @param {number} [details.tailShift] - Additional offset if any changes occurred before tail\n*/\nexport default\nclass ChangeDetails {\n  /** Inserted symbols */\n  inserted: string;\n  /** Can skip chars */\n  skip: boolean;\n  /** Additional offset if any changes occurred before tail */\n  tailShift: number;\n  /** Raw inserted is used by dynamic mask */\n  rawInserted: string;\n\n  constructor (details?: {\n    inserted?: $PropertyType<ChangeDetails, 'inserted'>,\n    rawInserted?: $PropertyType<ChangeDetails, 'rawInserted'>,\n    skip?: $PropertyType<ChangeDetails, 'skip'>,\n    tailShift?: $PropertyType<ChangeDetails, 'tailShift'>,\n  }) {\n    Object.assign(this, {\n      inserted: '',\n      rawInserted: '',\n      skip: false,\n      tailShift: 0,\n    }, details);\n  }\n\n  /**\n    Aggregate changes\n    @returns {ChangeDetails} `this`\n  */\n  aggregate (details: ChangeDetails): ChangeDetails {\n    this.rawInserted += details.rawInserted;\n    this.skip = this.skip || details.skip;\n    this.inserted += details.inserted;\n    this.tailShift += details.tailShift;\n    return this;\n  }\n\n  /** Total offset considering all changes */\n  get offset (): number {\n    return this.tailShift + this.inserted.length;\n  }\n}\n","// @flow\nimport ChangeDetails from './change-details.js';\n\n\n/** Checks if value is string */\nexport\nfunction isString (str: mixed): boolean %checks {\n  return typeof str === 'string' || str instanceof String;\n}\n\n/**\n  Direction\n  @prop {string} NONE\n  @prop {string} LEFT\n  @prop {string} FORCE_LEFT\n  @prop {string} RIGHT\n  @prop {string} FORCE_RIGHT\n*/\nexport\nconst DIRECTION = {\n  NONE: 'NONE',\n  LEFT: 'LEFT',\n  FORCE_LEFT: 'FORCE_LEFT',\n  RIGHT: 'RIGHT',\n  FORCE_RIGHT: 'FORCE_RIGHT',\n}\n/**\n  Direction\n  @enum {string}\n*/\nexport\ntype Direction = $Values<typeof DIRECTION>;\n\n/** Returns next char index in direction */\nexport\nfunction indexInDirection (pos: number, direction: Direction): number {\n  if (direction === DIRECTION.LEFT) --pos;\n  return pos;\n}\n\n/** Returns next char position in direction */\nexport\nfunction posInDirection (pos: number, direction: Direction): number {\n  switch (direction) {\n    case DIRECTION.LEFT:\n    case DIRECTION.FORCE_LEFT:\n      return --pos;\n    case DIRECTION.RIGHT:\n    case DIRECTION.FORCE_RIGHT:\n      return ++pos;\n    default:\n      return pos;\n  }\n}\n\n/** */\nexport\nfunction forceDirection (direction: Direction): Direction {\n  switch (direction) {\n    case DIRECTION.LEFT:\n      return DIRECTION.FORCE_LEFT;\n    case DIRECTION.RIGHT:\n      return DIRECTION.FORCE_RIGHT;\n    default:\n      return direction;\n  }\n}\n\n/** Escapes regular expression control chars */\nexport\nfunction escapeRegExp (str: string): string {\n  return str.replace(/([.*+?^=!:${}()|[\\]\\/\\\\])/g, '\\\\$1');\n}\n\nexport\nfunction normalizePrepare (prep: string | [string, ChangeDetails]): [string, ChangeDetails] {\n  return Array.isArray(prep) ? prep : [\n    prep,\n    new ChangeDetails(),\n  ];\n}\n\n// cloned from https://github.com/epoberezkin/fast-deep-equal with small changes\nexport\nfunction objectIncludes (b: any, a: any): boolean {\n  if (a === b) return true;\n\n  var arrA = Array.isArray(a)\n    , arrB = Array.isArray(b)\n    , i;\n\n  if (arrA && arrB) {\n    if (a.length != b.length) return false;\n    for (i = 0; i < a.length; i++)\n      if (!objectIncludes(a[i], b[i])) return false;\n    return true;\n  }\n\n  if (arrA != arrB) return false;\n\n  if (a && b && typeof a === 'object' && typeof b === 'object') {\n    var dateA = a instanceof Date\n      , dateB = b instanceof Date;\n    if (dateA && dateB) return a.getTime() == b.getTime();\n    if (dateA != dateB) return false;\n\n    var regexpA = a instanceof RegExp\n      , regexpB = b instanceof RegExp;\n    if (regexpA && regexpB) return a.toString() == b.toString();\n    if (regexpA != regexpB) return false;\n\n    var keys = Object.keys(a);\n    // if (keys.length !== Object.keys(b).length) return false;\n\n    for (i = 0; i < keys.length; i++)\n      // $FlowFixMe ... ???\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = 0; i < keys.length; i++)\n      if(!objectIncludes(b[keys[i]], a[keys[i]])) return false;\n\n    return true;\n  } else if (a && b && typeof a === 'function' && typeof b === 'function') {\n      return a.toString() === b.toString()\n  }\n\n  return false;\n}\n\n/** Selection range */\nexport\ntype Selection = {\n  start: number;\n  end: number;\n};\n","// @flow\nimport {type Direction, type Selection, DIRECTION} from './utils.js';\n\n\n/** Provides details of changing input */\nexport default\nclass ActionDetails {\n  /** Current input value */\n  value: string;\n  /** Current cursor position */\n  cursorPos: number;\n  /** Old input value */\n  oldValue: string;\n  /** Old selection */\n  oldSelection: Selection;\n\n  constructor (\n    value: string,\n    cursorPos: number,\n    oldValue: string,\n    oldSelection: Selection\n  ) {\n    this.value = value;\n    this.cursorPos = cursorPos;\n    this.oldValue = oldValue;\n    this.oldSelection = oldSelection;\n\n    // double check if left part was changed (autofilling, other non-standard input triggers)\n    while (this.value.slice(0, this.startChangePos) !== this.oldValue.slice(0, this.startChangePos)) {\n      --this.oldSelection.start;\n    }\n  }\n\n  /**\n    Start changing position\n    @readonly\n  */\n  get startChangePos (): number {\n    return Math.min(this.cursorPos, this.oldSelection.start);\n  }\n\n  /**\n    Inserted symbols count\n    @readonly\n  */\n  get insertedCount (): number {\n    return this.cursorPos - this.startChangePos;\n  }\n\n  /**\n    Inserted symbols\n    @readonly\n  */\n  get inserted (): string {\n    return this.value.substr(this.startChangePos, this.insertedCount);\n  }\n\n  /**\n    Removed symbols count\n    @readonly\n  */\n  get removedCount (): number {\n    // Math.max for opposite operation\n    return Math.max((this.oldSelection.end - this.startChangePos) ||\n      // for Delete\n      this.oldValue.length - this.value.length, 0);\n  }\n\n  /**\n    Removed symbols\n    @readonly\n  */\n  get removed (): string {\n    return this.oldValue.substr(this.startChangePos, this.removedCount);\n  }\n\n  /**\n    Unchanged head symbols\n    @readonly\n  */\n  get head (): string {\n    return this.value.substring(0, this.startChangePos);\n  }\n\n  /**\n    Unchanged tail symbols\n    @readonly\n  */\n  get tail (): string {\n    return this.value.substring(this.startChangePos + this.insertedCount);\n  }\n\n  /**\n    Remove direction\n    @readonly\n  */\n  get removeDirection (): Direction {\n    if (!this.removedCount || this.insertedCount) return DIRECTION.NONE;\n\n    // align right if delete at right\n    return (\n      (this.oldSelection.end === this.cursorPos || this.oldSelection.start === this.cursorPos) &&\n      // if not range removed (event with backspace)\n      this.oldSelection.end === this.oldSelection.start\n    ) ?\n      DIRECTION.RIGHT :\n      DIRECTION.LEFT;\n  }\n}\n","// @flow\nimport type { TailDetails, AppendTail } from './tail-details.js';\nimport type ChangeDetails from './change-details.js';\n\n\ntype ContinuousTailState = {\n  value: $PropertyType<ContinuousTailDetails, 'value'>,\n  from: $PropertyType<ContinuousTailDetails, 'from'>,\n  stop?: $PropertyType<ContinuousTailDetails, 'stop'>,\n};\n\n/** Provides details of continuous extracted tail */\nexport default\nclass ContinuousTailDetails implements TailDetails {\n  /** Tail value as string */\n  value: string;\n  /** Tail start position */\n  from: number;\n  /** Start position */\n  stop: ?number;\n\n  constructor (value?: string='', from?: number=0, stop?: number) {\n    this.value = value;\n    this.from = from;\n    this.stop = stop;\n  }\n\n  toString (): string { return this.value; }\n\n  extend (tail: string | TailDetails): void {\n    this.value += String(tail);\n  }\n\n  appendTo (masked: AppendTail): ChangeDetails {\n    return masked.append(this.toString(), { tail: true })\n      .aggregate(masked._appendPlaceholder());\n  }\n\n  get state (): ContinuousTailState {\n    return {\n      value: this.value,\n      from: this.from,\n      stop: this.stop,\n    };\n  }\n\n  set state (state: ContinuousTailState) {\n    Object.assign(this, state);\n  }\n\n  unshift (beforePos?: number): string {\n    if (!this.value.length || (beforePos != null && this.from >= beforePos)) return '';\n\n    const shiftChar = this.value[0];\n    this.value = this.value.slice(1);\n    return shiftChar;\n  }\n\n  shift (): string {\n    if (!this.value.length) return '';\n\n    const shiftChar = this.value[this.value.length-1];\n    this.value = this.value.slice(0, -1);\n    return shiftChar;\n  }\n}\n","/**\n * Applies mask on element.\n * @constructor\n * @param {HTMLInputElement|HTMLTextAreaElement|MaskElement} el - Element to apply mask\n * @param {Object} opts - Custom mask options\n * @return {InputMask}\n */\nexport default\nfunction IMask (el, opts={}) {\n  // currently available only for input-like elements\n  return new IMask.InputMask(el, opts);\n}\n","// @flow\nimport ChangeDetails from '../core/change-details.js';\nimport ContinuousTailDetails from '../core/continuous-tail-details.js';\nimport { type Direction, DIRECTION, isString, normalizePrepare, forceDirection } from '../core/utils.js';\nimport { type TailDetails } from '../core/tail-details.js';\nimport IMask from '../core/holder.js';\n\n\n/** Supported mask type */\nexport\ntype Mask =\n  string |\n  String |\n  RegExp |\n  Class<Number> |\n  Class<Date> |\n  Array<any> |\n  $PropertyType<Masked<*>, 'validate'> |\n  Masked<*> |\n  Class<Masked<*>>;\n\nexport\ntype MaskedState = {|\n  _value: string,\n|};\n\n/** Append flags */\nexport\ntype AppendFlags = {\n  input?: boolean,\n  tail?: boolean,\n  raw?: boolean,\n  _beforeTailState?: any,  // TODO types...\n};\n\n/** Extract flags */\nexport\ntype ExtractFlags = {\n  raw?: boolean\n};\n\nexport\ntype MaskedOptions<MaskType> = {\n  mask: $PropertyType<Masked<MaskType>, 'mask'>,\n  parent?: $PropertyType<Masked<*>, 'parent'>,\n  prepare?: $PropertyType<Masked<MaskType>, 'prepare'>,\n  validate?: $PropertyType<Masked<MaskType>, 'validate'>,\n  commit?: $PropertyType<Masked<MaskType>, 'commit'>,\n  overwrite?: $PropertyType<Masked<MaskType>, 'overwrite'>,\n  eager?: $PropertyType<Masked<MaskType>, 'eager'>,\n  format?: $PropertyType<Masked<MaskType>, 'format'>,\n  parse?: $PropertyType<Masked<MaskType>, 'parse'>,\n  skipInvalid?: $PropertyType<Masked<MaskType>, 'skipInvalid'>,\n};\n\n\n/** Provides common masking stuff */\nexport default\nclass Masked<MaskType> {\n  static DEFAULTS: any; // $Shape<MaskedOptions>; TODO after fix https://github.com/facebook/flow/issues/4773\n  static EMPTY_VALUES: any;\n\n  /** @type {Mask} */\n  mask: MaskType;\n  /** */ // $FlowFixMe no ideas\n  parent: ?Masked<*>;\n  /** Transforms value before mask processing */\n  prepare: (string, Masked<MaskType>, AppendFlags) => string | [string, ChangeDetails];\n  /** Validates if value is acceptable */\n  validate: (string, Masked<MaskType>, AppendFlags) => boolean;\n  /** Does additional processing in the end of editing */\n  commit: (string, Masked<MaskType>) => void;\n  /** Format typed value to string */\n  format: (any, Masked<MaskType>) => string;\n  /** Parse strgin to get typed value */\n  parse: (string, Masked<MaskType>) => any;\n  /** Enable characters overwriting */\n  overwrite: ?boolean | 'shift';\n  /** */\n  eager: boolean | 'remove' | 'append';\n  /** */\n  skipInvalid: boolean;\n  /** */\n  isInitialized: boolean;\n  _value: string;\n  _refreshing: ?boolean;\n  _isolated: ?boolean;\n\n  constructor (opts: {[string]: any}) {\n    this._value = '';\n    this._update({\n      ...Masked.DEFAULTS,\n      ...opts,\n    });\n    this.isInitialized = true;\n  }\n\n  /** Sets and applies new options */\n  updateOptions (opts: {[string]: any}) {\n    if (!Object.keys(opts).length) return;\n    // $FlowFixMe\n    this.withValueRefresh(this._update.bind(this, opts));\n  }\n\n  /**\n    Sets new options\n    @protected\n  */\n  _update (opts: {[string]: any}) {\n    Object.assign(this, opts);\n  }\n\n  /** Mask state */\n  get state (): any {\n    return {\n      _value: this.value,\n    };\n  }\n\n  set state (state: any) {\n    this._value = state._value;\n  }\n\n  /** Resets value */\n  reset () {\n    this._value = '';\n  }\n\n  /** */\n  get value (): string {\n    return this._value;\n  }\n\n  set value (value: string) {\n    this.resolve(value);\n  }\n\n  /** Resolve new value */\n  resolve (value: string): string {\n    this.reset();\n    this.append(value, {input: true}, '');\n    this.doCommit();\n    return this.value;\n  }\n\n  /** */\n  get unmaskedValue (): string {\n    return this.value;\n  }\n\n  set unmaskedValue (value: string) {\n    this.reset();\n    this.append(value, {}, '');\n    this.doCommit();\n  }\n\n  /** */\n  get typedValue (): any {\n    return this.doParse(this.value);\n  }\n\n  set typedValue (value: any) {\n    this.value = this.doFormat(value);\n  }\n\n  /** Value that includes raw user input */\n  get rawInputValue (): string {\n    return this.extractInput(0, this.value.length, {raw: true});\n  }\n\n  set rawInputValue (value: string) {\n    this.reset();\n    this.append(value, {raw: true}, '');\n    this.doCommit();\n  }\n\n  get displayValue (): string {\n    return this.value;\n  }\n\n  /** */\n  get isComplete (): boolean {\n    return true;\n  }\n\n  /** */\n  get isFilled (): boolean {\n    return this.isComplete;\n  }\n\n  /** Finds nearest input position in direction */\n  nearestInputPos (cursorPos: number, direction?: Direction): number {\n    return cursorPos;\n  }\n\n  /** Extracts value in range considering flags */\n  extractInput (fromPos?: number=0, toPos?: number=this.value.length, flags?: ExtractFlags): string {\n    return this.value.slice(fromPos, toPos);\n  }\n\n  /** Extracts tail in range */\n  extractTail (fromPos?: number=0, toPos?: number=this.value.length): TailDetails {\n    return new ContinuousTailDetails(this.extractInput(fromPos, toPos), fromPos);\n  }\n\n  /** Appends tail */\n  // $FlowFixMe no ideas\n  appendTail (tail: string | String | TailDetails): ChangeDetails {\n    if (isString(tail)) tail = new ContinuousTailDetails(String(tail));\n\n    return tail.appendTo(this);\n  }\n\n  /** Appends char */\n  _appendCharRaw (ch: string, flags: AppendFlags={}): ChangeDetails {\n    if (!ch) return new ChangeDetails();\n\n    this._value += ch;\n    return new ChangeDetails({\n      inserted: ch,\n      rawInserted: ch,\n    });\n  }\n\n  /** Appends char */\n  _appendChar (ch: string, flags: AppendFlags={}, checkTail?: TailDetails): ChangeDetails {\n    const consistentState: MaskedState = this.state;\n    let details: ChangeDetails;\n    [ch, details] = normalizePrepare(this.doPrepare(ch, flags));\n\n    details = details.aggregate(this._appendCharRaw(ch, flags));\n\n    if (details.inserted) {\n      let consistentTail;\n      let appended = this.doValidate(flags) !== false;\n\n      if (appended && checkTail != null) {\n        // validation ok, check tail\n        const beforeTailState = this.state;\n        if (this.overwrite === true) {\n          consistentTail = checkTail.state;\n          checkTail.unshift(this.value.length - details.tailShift);\n        }\n\n        let tailDetails = this.appendTail(checkTail);\n        appended = tailDetails.rawInserted === checkTail.toString();\n\n        // not ok, try shift\n        if (!(appended && tailDetails.inserted) && this.overwrite === 'shift') {\n          this.state = beforeTailState;\n          consistentTail = checkTail.state;\n          checkTail.shift();\n\n          tailDetails = this.appendTail(checkTail);\n          appended = tailDetails.rawInserted === checkTail.toString();\n        }\n\n        // if ok, rollback state after tail\n        if (appended && tailDetails.inserted) this.state = beforeTailState;\n      }\n\n      // revert all if something went wrong\n      if (!appended) {\n        details = new ChangeDetails();\n        this.state = consistentState;\n        if (checkTail && consistentTail) checkTail.state = consistentTail;\n      }\n    }\n    return details;\n  }\n\n  /** Appends optional placeholder at end */\n  _appendPlaceholder (): ChangeDetails {\n    return new ChangeDetails();\n  }\n\n  /** Appends optional eager placeholder at end */\n  _appendEager (): ChangeDetails {\n    return new ChangeDetails();\n  }\n\n  /** Appends symbols considering flags */\n  // $FlowFixMe no ideas\n  append (str: string, flags?: AppendFlags, tail?: string | String | TailDetails): ChangeDetails {\n    if (!isString(str)) throw new Error('value should be string');\n    const details = new ChangeDetails();\n    const checkTail = isString(tail) ? new ContinuousTailDetails(String(tail)) : tail;\n    if (flags?.tail) flags._beforeTailState = this.state;\n\n    for (let ci=0; ci<str.length; ++ci) {\n      const d = this._appendChar(str[ci], flags, checkTail);\n      if (!d.rawInserted && !this.doSkipInvalid(str[ci], flags, checkTail)) break;\n      details.aggregate(d);\n    }\n\n    // append tail but aggregate only tailShift\n    if (checkTail != null) {\n      details.tailShift += this.appendTail(checkTail).tailShift;\n      // TODO it's a good idea to clear state after appending ends\n      // but it causes bugs when one append calls another (when dynamic dispatch set rawInputValue)\n      // this._resetBeforeTailState();\n    }\n\n    if ((this.eager === true || this.eager === 'append') && flags?.input && str) {\n      details.aggregate(this._appendEager());\n    }\n\n    return details;\n  }\n\n  /** */\n  remove (fromPos?: number=0, toPos?: number=this.value.length): ChangeDetails {\n    this._value = this.value.slice(0, fromPos) + this.value.slice(toPos);\n    return new ChangeDetails();\n  }\n\n  /** Calls function and reapplies current value */\n  withValueRefresh<T>(fn: () => T): T {\n    if (this._refreshing || !this.isInitialized) return fn();\n    this._refreshing = true;\n\n    const rawInput = this.rawInputValue;\n    const value = this.value;\n\n    const ret = fn();\n\n    this.rawInputValue = rawInput;\n    // append lost trailing chars at end\n    if (this.value && this.value !== value && value.indexOf(this.value) === 0) {\n      this.append(value.slice(this.value.length), {}, '');\n    }\n\n    delete this._refreshing;\n    return ret;\n  }\n\n  /** */\n  runIsolated<T>(fn: (masked: any) => T): T {\n    if (this._isolated || !this.isInitialized) return fn(this);\n    this._isolated = true;\n    const state = this.state;\n\n    const ret = fn(this);\n\n    this.state = state;\n    delete this._isolated;\n\n    return ret;\n  }\n\n  /** */\n  doSkipInvalid (ch: string, flags: AppendFlags={}, checkTail?: TailDetails): boolean {\n    return this.skipInvalid;\n  }\n\n  /**\n    Prepares string before mask processing\n    @protected\n  */\n  doPrepare (str: string, flags: AppendFlags={}): string | [string, ChangeDetails] {\n    return this.prepare ?\n      this.prepare(str, this, flags) :\n      str;\n  }\n\n  /**\n    Validates if value is acceptable\n    @protected\n  */\n  doValidate (flags: AppendFlags): boolean {\n    return (!this.validate || this.validate(this.value, this, flags)) &&\n      (!this.parent || this.parent.doValidate(flags));\n  }\n\n  /**\n    Does additional processing in the end of editing\n    @protected\n  */\n  doCommit () {\n    if (this.commit) this.commit(this.value, this);\n  }\n\n  /** */\n  doFormat (value: any): string {\n    return this.format ? this.format(value, this) : value;\n  }\n\n  /** */\n  doParse (str: string): any {\n    return this.parse ? this.parse(str, this) : str;\n  }\n\n  /** */\n  splice (start: number, deleteCount: number, inserted: string, removeDirection: Direction, flags: AppendFlags = { input: true }): ChangeDetails {\n    const tailPos: number = start + deleteCount;\n    const tail: TailDetails = this.extractTail(tailPos);\n\n    const eagerRemove = this.eager === true || this.eager === 'remove';\n\n    let oldRawValue;\n    if (eagerRemove)  {\n      removeDirection = forceDirection(removeDirection);\n      oldRawValue = this.extractInput(0, tailPos, {raw: true});\n    }\n\n    let startChangePos: number = start;\n    const details: ChangeDetails = new ChangeDetails();\n\n    // if it is just deletion without insertion\n    if (removeDirection !== DIRECTION.NONE) {\n      startChangePos = this.nearestInputPos(start,\n        deleteCount > 1 && start !== 0 && !eagerRemove ?\n        DIRECTION.NONE :\n        removeDirection\n      );\n\n      // adjust tailShift if start was aligned\n      details.tailShift = startChangePos - start;\n    }\n\n    details.aggregate(this.remove(startChangePos));\n\n    if (eagerRemove && removeDirection !== DIRECTION.NONE && oldRawValue === this.rawInputValue) {\n      if (removeDirection === DIRECTION.FORCE_LEFT) {\n        let valLength;\n        while (oldRawValue === this.rawInputValue && (valLength = this.value.length)) {\n          details\n            .aggregate(new ChangeDetails({ tailShift: -1 }))\n            .aggregate(this.remove(valLength-1));\n        }\n      } else if (removeDirection === DIRECTION.FORCE_RIGHT) {\n        tail.unshift();\n      }\n    }\n\n    return details.aggregate(this.append(inserted, flags, tail));\n  }\n\n  maskEquals (mask: any): boolean {\n    return this.mask === mask;\n  }\n\n  typedValueEquals (value: any): boolean {\n    const tval = this.typedValue;\n\n    return value === tval ||\n      Masked.EMPTY_VALUES.includes(value) && Masked.EMPTY_VALUES.includes(tval) ||\n      this.doFormat(value) === this.doFormat(this.typedValue);\n  }\n}\nMasked.DEFAULTS = {\n  format: String,\n  parse: v => v,\n  skipInvalid: true,\n};\nMasked.EMPTY_VALUES = [undefined, null, ''];\n\n\nIMask.Masked = Masked;\n","// @flow\nimport { isString } from '../core/utils.js';\nimport type Masked from './base.js';\nimport { type Mask } from './base.js';\nimport IMask from '../core/holder.js';\n\n\n/** Get Masked class by mask type */\nexport\nfunction maskedClass (mask: Mask): Class<Masked<*>> {\n  if (mask == null) {\n    throw new Error('mask property should be defined');\n  }\n\n  // $FlowFixMe\n  if (mask instanceof RegExp) return IMask.MaskedRegExp;\n  // $FlowFixMe\n  if (isString(mask)) return IMask.MaskedPattern;\n  // $FlowFixMe\n  if (mask instanceof Date || mask === Date) return IMask.MaskedDate;\n  // $FlowFixMe\n  if (mask instanceof Number || typeof mask === 'number' || mask === Number) return IMask.MaskedNumber;\n  // $FlowFixMe\n  if (Array.isArray(mask) || mask === Array) return IMask.MaskedDynamic;\n  // $FlowFixMe\n  if (IMask.Masked && mask.prototype instanceof IMask.Masked) return mask;\n  // $FlowFixMe\n  if (mask instanceof IMask.Masked) return mask.constructor;\n  // $FlowFixMe\n  if (mask instanceof Function) return IMask.MaskedFunction;\n\n  console.warn('Mask not found for mask', mask);  // eslint-disable-line no-console\n  // $FlowFixMe\n  return IMask.Masked;\n}\n\n/** Creates new {@link Masked} depending on mask type */\nexport default\nfunction createMask (opts: {mask: Mask} | Masked<*>): Masked<*> {\n  // $FlowFixMe\n  if (IMask.Masked && (opts instanceof IMask.Masked)) return opts;\n\n  opts = {...opts};\n  const mask = opts.mask;\n\n  // $FlowFixMe\n  if (IMask.Masked && (mask instanceof IMask.Masked)) return mask;\n\n  const MaskedClass = maskedClass(mask);\n  if (!MaskedClass) throw new Error('Masked class is not found for provided mask, appropriate module needs to be import manually before creating mask.');\n  return new MaskedClass(opts);\n}\n\n\nIMask.createMask = createMask;\n","// @flow\nimport createMask from '../factory.js';\nimport type Masked from '../base.js';\nimport type MaskedPattern from '../pattern.js';\nimport { type TailDetails } from '../../core/tail-details.js';\nimport { type Mask, type ExtractFlags, type AppendFlags } from '../base.js';\nimport ChangeDetails from '../../core/change-details.js';\nimport { DIRECTION, type Direction } from '../../core/utils.js';\nimport { type PatternBlock } from './block.js';\n\n\nexport\ntype Definitions = {\n  [string]: any, // TODO\n};\n\n/** */\ntype PatternInputDefinitionOptions = {\n  parent: $PropertyType<PatternInputDefinition, 'parent'>,\n  isOptional: $PropertyType<PatternInputDefinition, 'isOptional'>,\n  lazy: $PropertyType<PatternInputDefinition, 'lazy'>,\n  eager: $PropertyType<PatternInputDefinition, 'eager'>,\n  placeholderChar: $PropertyType<PatternInputDefinition, 'placeholderChar'>,\n  displayChar: $PropertyType<PatternInputDefinition, 'displayChar'>,\n  mask: Mask,\n  [string]: any, // TODO\n};\n\ntype PatternInputDefinitionState = {\n  masked: *,\n  isFilled: boolean,\n};\n\nexport\nconst DEFAULT_INPUT_DEFINITIONS: { [string]: RegExp } = {\n  '0': /\\d/,\n  'a': /[\\u0041-\\u005A\\u0061-\\u007A\\u00AA\\u00B5\\u00BA\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0\\u08A2-\\u08AC\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097F\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C3D\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191C\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19C1-\\u19C7\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA697\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA793\\uA7A0-\\uA7AA\\uA7F8-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA80-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]/,  // http://stackoverflow.com/a/22075070\n  '*': /./\n};\n\n\n/** */\nexport default\nclass PatternInputDefinition implements PatternBlock {\n  /** */\n  +masked: Masked<*>;\n  /** */\n  parent: Masked<*>;\n  /** */\n  isOptional: boolean;\n  /** */\n  isFilled: boolean;\n  /** */\n  lazy: $PropertyType<MaskedPattern, 'lazy'>;\n  /** */\n  eager: $PropertyType<Masked<string>, 'eager'>;\n  /** */\n  placeholderChar: $PropertyType<MaskedPattern, 'placeholderChar'>;\n  /** */\n  displayChar: $PropertyType<MaskedPattern, 'displayChar'>;\n\n\n  constructor(opts: PatternInputDefinitionOptions) {\n    const { parent, isOptional, placeholderChar, displayChar, lazy, eager, ...maskOpts } = opts;\n\n    this.masked = createMask(maskOpts);\n    Object.assign(this, { parent, isOptional, placeholderChar, displayChar, lazy, eager });\n  }\n\n  reset () {\n    this.isFilled = false;\n    this.masked.reset();\n  }\n\n  remove (fromPos?: number=0, toPos?: number=this.value.length): ChangeDetails {\n    if (fromPos === 0 && toPos >= 1) {\n      this.isFilled = false;\n      return this.masked.remove(fromPos, toPos);\n    }\n\n    return new ChangeDetails();\n  }\n\n  get value (): string {\n    return this.masked.value ||\n      (this.isFilled && !this.isOptional ?\n        this.placeholderChar :\n        '');\n  }\n\n  get unmaskedValue (): string {\n    return this.masked.unmaskedValue;\n  }\n\n  get displayValue (): string {\n    return this.masked.value && this.displayChar || this.value;\n  }\n\n  get isComplete (): boolean {\n    return Boolean(this.masked.value) || this.isOptional;\n  }\n\n  _appendChar (ch: string, flags: AppendFlags={}): ChangeDetails {\n    if (this.isFilled) return new ChangeDetails();\n\n    const state = this.masked.state;\n    // simulate input\n    const details = this.masked._appendChar(ch, flags);\n\n    if (details.inserted && this.doValidate(flags) === false) {\n      details.inserted = details.rawInserted = '';\n      this.masked.state = state;\n    }\n\n    if (!details.inserted && !this.isOptional && !this.lazy && !flags.input) {\n      details.inserted = this.placeholderChar;\n    }\n    details.skip = !details.inserted && !this.isOptional;\n    this.isFilled = Boolean(details.inserted);\n\n    return details;\n  }\n\n  append (...args: *): ChangeDetails {\n    // TODO probably should be done via _appendChar\n    return this.masked.append(...args);\n  }\n\n  _appendPlaceholder (): ChangeDetails {\n    const details = new ChangeDetails();\n\n    if (this.isFilled || this.isOptional) return details;\n\n    this.isFilled = true;\n    details.inserted = this.placeholderChar;\n    return details;\n  }\n\n  _appendEager (): ChangeDetails {\n    return new ChangeDetails();\n  }\n\n  extractTail (...args: *): TailDetails {\n    return this.masked.extractTail(...args);\n  }\n\n  appendTail (...args: *): ChangeDetails {\n    return this.masked.appendTail(...args);\n  }\n\n  extractInput (fromPos?: number=0, toPos?: number=this.value.length, flags?: ExtractFlags): string {\n    return this.masked.extractInput(fromPos, toPos, flags);\n  }\n\n  nearestInputPos (cursorPos: number, direction: Direction=DIRECTION.NONE): number {\n    const minPos = 0;\n    const maxPos = this.value.length;\n    const boundPos = Math.min(Math.max(cursorPos, minPos), maxPos);\n\n    switch (direction) {\n      case DIRECTION.LEFT:\n      case DIRECTION.FORCE_LEFT:\n        return this.isComplete ? boundPos : minPos;\n      case DIRECTION.RIGHT:\n      case DIRECTION.FORCE_RIGHT:\n        return this.isComplete ? boundPos : maxPos;\n      case DIRECTION.NONE:\n      default: return boundPos;\n    }\n  }\n\n  doValidate (...args: *): boolean {\n    return this.masked.doValidate(...args) && (\n      !this.parent || this.parent.doValidate(...args));\n  }\n\n  doCommit () {\n    this.masked.doCommit();\n  }\n\n  get state (): PatternInputDefinitionState {\n    return {\n      masked: this.masked.state,\n      isFilled: this.isFilled,\n    };\n  }\n\n  set state (state: PatternInputDefinitionState) {\n    this.masked.state = state.masked;\n    this.isFilled = state.isFilled;\n  }\n}\n","// @flow\nimport ChangeDetails from '../../core/change-details.js';\nimport { DIRECTION, type Direction, isString } from '../../core/utils.js';\nimport { type TailDetails } from '../../core/tail-details.js';\nimport ContinuousTailDetails from '../../core/continuous-tail-details.js';\nimport { type ExtractFlags, type AppendFlags, type MaskedState } from '../base.js';\nimport { type PatternBlock } from './block.js';\n\n\n/** */\ntype PatternFixedDefinitionOptions = {\n  char: $PropertyType<PatternFixedDefinition, 'char'>,\n  isUnmasking?: $PropertyType<PatternFixedDefinition, 'isUnmasking'>,\n};\n\ntype PatternFixedDefinitionState = {|\n  ...MaskedState,\n  _isRawInput: ?boolean,\n|};\n\nexport default\nclass PatternFixedDefinition implements PatternBlock {\n  /** */\n  _value: string;\n  /** */\n  char: string;\n  /** */\n  isUnmasking: ?boolean;\n  /** */\n  eager: boolean | 'remove' | 'append';\n  /** */\n  _isRawInput: ?boolean;\n  /** */\n  isFixed: boolean;\n\n  constructor(opts: PatternFixedDefinitionOptions) {\n    Object.assign(this, opts);\n    this._value = '';\n    this.isFixed = true;\n  }\n\n  get value (): string {\n    return this._value;\n  }\n\n  get unmaskedValue (): string {\n    return this.isUnmasking ? this.value : '';\n  }\n\n  get displayValue (): string {\n    return this.value;\n  }\n\n  reset () {\n    this._isRawInput = false;\n    this._value = '';\n  }\n\n  remove (fromPos?: number=0, toPos?: number=this._value.length): ChangeDetails {\n    this._value = this._value.slice(0, fromPos) + this._value.slice(toPos);\n    if (!this._value) this._isRawInput = false;\n\n    return new ChangeDetails();\n  }\n\n  nearestInputPos (cursorPos: number, direction: Direction=DIRECTION.NONE): number {\n    const minPos = 0;\n    const maxPos = this._value.length;\n\n    switch (direction) {\n      case DIRECTION.LEFT:\n      case DIRECTION.FORCE_LEFT:\n        return minPos;\n      case DIRECTION.NONE:\n      case DIRECTION.RIGHT:\n      case DIRECTION.FORCE_RIGHT:\n      default:\n        return maxPos;\n    }\n  }\n\n  extractInput (fromPos?: number=0, toPos?: number=this._value.length, flags?: ExtractFlags={}): string {\n    return flags.raw && this._isRawInput && this._value.slice(fromPos, toPos) || '';\n  }\n\n  get isComplete (): boolean {\n    return true;\n  }\n\n  get isFilled (): boolean {\n    return Boolean(this._value);\n  }\n\n  _appendChar (ch: string, flags?: AppendFlags={}): ChangeDetails {\n    const details = new ChangeDetails();\n\n    if (this._value) return details;\n    const appendEager = this.eager === true || this.eager === 'append';\n\n    const appended = this.char === ch;\n    const isResolved = appended && (this.isUnmasking || flags.input || flags.raw) && (!flags.raw || !appendEager) && !flags.tail;\n    if (isResolved) details.rawInserted = this.char;\n    this._value = details.inserted = this.char;\n    this._isRawInput = isResolved && (flags.raw || flags.input);\n\n    return details;\n  }\n\n  _appendEager (): ChangeDetails {\n    return this._appendChar(this.char, { tail: true });\n  }\n\n  _appendPlaceholder (): ChangeDetails {\n    const details = new ChangeDetails();\n    if (this._value) return details;\n\n    this._value = details.inserted = this.char;\n    return details;\n  }\n\n  extractTail (fromPos?: number=0, toPos?: number=this.value.length): TailDetails {\n    return new ContinuousTailDetails('');\n  }\n\n  // $FlowFixMe no ideas\n  appendTail (tail: string | String | TailDetails): ChangeDetails {\n    if (isString(tail)) tail = new ContinuousTailDetails(String(tail));\n\n    return tail.appendTo(this);\n  }\n\n  append (str: string, flags?: AppendFlags, tail?: TailDetails): ChangeDetails {\n    const details = this._appendChar(str[0], flags);\n\n    if (tail != null) {\n      details.tailShift += this.appendTail(tail).tailShift;\n    }\n\n    return details;\n  }\n\n  doCommit () {}\n\n  get state (): PatternFixedDefinitionState {\n    return {\n      _value: this._value,\n      _isRawInput: this._isRawInput,\n    };\n  }\n\n  set state (state: PatternFixedDefinitionState) {\n    Object.assign(this, state);\n  }\n}\n","// @flow\nimport type { TailDetails, AppendTail } from '../../core/tail-details.js';\nimport ChangeDetails from '../../core/change-details.js';\nimport { isString } from '../../core/utils.js';\nimport ContinuousTailDetails from '../../core/continuous-tail-details.js';\nimport IMask from '../../core/holder.js';\n\n\ntype ChunksTailState = {\n  chunks: $PropertyType<ChunksTailDetails, 'chunks'>,\n  from: $PropertyType<ChunksTailDetails, 'from'>,\n  stop?: $PropertyType<ChunksTailDetails, 'stop'>,\n  blockIndex?: $PropertyType<ChunksTailDetails, 'blockIndex'>,\n};\n\nexport default\nclass ChunksTailDetails implements TailDetails {\n  chunks: Array<TailDetails>;\n  from: number;\n  stop: ?number;\n  /** */\n  blockIndex: ?number;\n\n  constructor (chunks?: Array<TailDetails>=[], from?: number=0) {\n    this.chunks = chunks;\n    this.from = from;\n  }\n\n  toString (): string {\n    return this.chunks.map(String).join('');\n  }\n\n  // $FlowFixMe no ideas\n  extend (tailChunk: string | String | TailDetails): void {\n    if (!String(tailChunk)) return;\n    if (isString(tailChunk)) tailChunk = new ContinuousTailDetails(String(tailChunk));\n\n    const lastChunk = this.chunks[this.chunks.length-1];\n    const extendLast = lastChunk &&\n      // if stops are same or tail has no stop\n      (lastChunk.stop === tailChunk.stop || tailChunk.stop == null) &&\n      // if tail chunk goes just after last chunk\n      tailChunk.from === (lastChunk.from + lastChunk.toString().length);\n\n    if (tailChunk instanceof ContinuousTailDetails) {\n      // check the ability to extend previous chunk\n      if (extendLast) {\n        // extend previous chunk\n        lastChunk.extend(tailChunk.toString());\n      } else {\n        // append new chunk\n        this.chunks.push(tailChunk);\n      }\n    } else if (tailChunk instanceof ChunksTailDetails) {\n      if (tailChunk.stop == null) {\n        // unwrap floating chunks to parent, keeping `from` pos\n        let firstTailChunk;\n        while (tailChunk.chunks.length && tailChunk.chunks[0].stop == null) {\n          firstTailChunk = tailChunk.chunks.shift();\n          firstTailChunk.from += tailChunk.from;\n          this.extend(firstTailChunk);\n        }\n      }\n\n      // if tail chunk still has value\n      if (tailChunk.toString()) {\n        // if chunks contains stops, then popup stop to container\n        tailChunk.stop = tailChunk.blockIndex;\n        this.chunks.push(tailChunk);\n      }\n    }\n  }\n\n  appendTo (masked: AppendTail): ChangeDetails {\n    // $FlowFixMe\n    if (!(masked instanceof IMask.MaskedPattern)) {\n      const tail = new ContinuousTailDetails(this.toString());\n      return tail.appendTo(masked);\n    }\n\n    const details = new ChangeDetails();\n\n    for (let ci=0; ci < this.chunks.length && !details.skip; ++ci) {\n      const chunk = this.chunks[ci];\n\n      const lastBlockIter = masked._mapPosToBlock(masked.value.length);\n      const stop = chunk.stop;\n      let chunkBlock;\n      if (stop != null &&\n        // if block not found or stop is behind lastBlock\n        (!lastBlockIter || lastBlockIter.index <= stop)\n      ) {\n        if (\n          chunk instanceof ChunksTailDetails ||\n          // for continuous block also check if stop is exist\n          masked._stops.indexOf(stop) >= 0\n        ) {\n          details.aggregate(masked._appendPlaceholder(stop));\n        }\n        chunkBlock = chunk instanceof ChunksTailDetails && masked._blocks[stop];\n      }\n\n      if (chunkBlock) {\n        const tailDetails = chunkBlock.appendTail(chunk);\n        tailDetails.skip = false; // always ignore skip, it will be set on last\n        details.aggregate(tailDetails);\n        masked._value += tailDetails.inserted;\n\n        // get not inserted chars\n        const remainChars = chunk.toString().slice(tailDetails.rawInserted.length);\n        if (remainChars) details.aggregate(masked.append(remainChars, { tail: true }));\n      } else {\n        details.aggregate(masked.append(chunk.toString(), { tail: true }));\n      }\n    };\n\n    return details;\n  }\n\n  get state (): ChunksTailState {\n    return {\n      chunks: this.chunks.map(c => c.state),\n      from: this.from,\n      stop: this.stop,\n      blockIndex: this.blockIndex,\n    };\n  }\n\n  set state (state: ChunksTailState) {\n    const { chunks, ...props } = state;\n    Object.assign(this, props);\n    this.chunks = chunks.map(cstate => {\n      const chunk = \"chunks\" in cstate ?\n        new ChunksTailDetails() :\n        new ContinuousTailDetails();\n      // $FlowFixMe already checked above\n      chunk.state = cstate;\n      return chunk;\n    });\n  }\n\n  unshift (beforePos?: number): string {\n    if (!this.chunks.length || (beforePos != null && this.from >= beforePos)) return '';\n\n    const chunkShiftPos = beforePos != null ? beforePos - this.from : beforePos;\n    let ci=0;\n    while (ci < this.chunks.length) {\n      const chunk = this.chunks[ci];\n      const shiftChar = chunk.unshift(chunkShiftPos);\n\n      if (chunk.toString()) {\n        // chunk still contains value\n        // but not shifted - means no more available chars to shift\n        if (!shiftChar) break;\n        ++ci;\n      } else {\n        // clean if chunk has no value\n        this.chunks.splice(ci, 1);\n      }\n\n      if (shiftChar) return shiftChar;\n    }\n\n    return '';\n  }\n\n  shift (): string {\n    if (!this.chunks.length) return '';\n\n    let ci=this.chunks.length-1;\n    while (0 <= ci) {\n      const chunk = this.chunks[ci];\n      const shiftChar = chunk.shift();\n\n      if (chunk.toString()) {\n        // chunk still contains value\n        // but not shifted - means no more available chars to shift\n        if (!shiftChar) break;\n        --ci;\n      } else {\n        // clean if chunk has no value\n        this.chunks.splice(ci, 1);\n      }\n\n      if (shiftChar) return shiftChar;\n    }\n\n    return '';\n  }\n}\n","// @flow\nimport { DIRECTION } from '../../core/utils.js';\nimport type MaskedPattern from '../pattern.js';\nimport { type PatternBlock } from './block.js';\n\n\ntype PatternCursorState = { offset: number, index: number, ok: boolean };\n\nexport default\nclass PatternCursor {\n  masked: MaskedPattern;\n  offset: number;\n  index: number;\n  ok: boolean;\n  _log: PatternCursorState[];\n\n  constructor (masked: MaskedPattern, pos: number) {\n    this.masked = masked;\n    this._log = [];\n\n    const { offset, index } = masked._mapPosToBlock(pos) || (\n      pos < 0 ?\n        // first\n        { index: 0, offset: 0 } :\n        // last\n        { index: this.masked._blocks.length, offset: 0 }\n    );\n    this.offset = offset;\n    this.index = index;\n    this.ok = false;\n  }\n\n  get block (): PatternBlock {\n    return this.masked._blocks[this.index];\n  }\n\n  get pos (): number {\n    return this.masked._blockStartPos(this.index) + this.offset;\n  }\n\n  get state (): PatternCursorState {\n    return { index: this.index, offset: this.offset, ok: this.ok };\n  }\n\n  set state (s: PatternCursorState) {\n    Object.assign(this, s);\n  }\n\n  pushState () {\n    this._log.push(this.state);\n  }\n\n  popState (): PatternCursorState {\n    const s = this._log.pop();\n    this.state = s;\n    return s;\n  }\n\n  bindBlock () {\n    if (this.block) return;\n    if (this.index < 0) {\n      this.index = 0;\n      this.offset = 0;\n    }\n    if (this.index >= this.masked._blocks.length) {\n      this.index = this.masked._blocks.length - 1;\n      this.offset = this.block.value.length;\n    }\n  }\n\n  _pushLeft(fn: () => ?boolean): boolean {\n    this.pushState();\n    for (this.bindBlock(); 0<=this.index; --this.index, this.offset=this.block?.value.length || 0) {\n      if (fn()) return this.ok = true;\n    }\n\n    return this.ok = false;\n  }\n\n  _pushRight (fn: () => ?boolean): boolean {\n    this.pushState();\n    for (this.bindBlock(); this.index<this.masked._blocks.length; ++this.index, this.offset=0) {\n      if (fn()) return this.ok = true;\n    }\n\n    return this.ok = false;\n  }\n\n  pushLeftBeforeFilled (): boolean {\n    return this._pushLeft(() => {\n      if (this.block.isFixed || !this.block.value) return;\n\n      this.offset = this.block.nearestInputPos(this.offset, DIRECTION.FORCE_LEFT);\n      if (this.offset !== 0) return true;\n    });\n  }\n\n  pushLeftBeforeInput (): boolean {\n    // cases:\n    // filled input: 00|\n    // optional empty input: 00[]|\n    // nested block: XX<[]>|\n    return this._pushLeft(() => {\n      if (this.block.isFixed) return;\n\n      this.offset = this.block.nearestInputPos(this.offset, DIRECTION.LEFT);\n      return true;\n    });\n  }\n\n  pushLeftBeforeRequired (): boolean {\n    return this._pushLeft(() => {\n      if (this.block.isFixed || this.block.isOptional && !this.block.value) return;\n\n      this.offset = this.block.nearestInputPos(this.offset, DIRECTION.LEFT);\n      return true;\n    });\n  }\n\n  pushRightBeforeFilled (): boolean {\n    return this._pushRight(() => {\n      if (this.block.isFixed || !this.block.value) return;\n\n      this.offset = this.block.nearestInputPos(this.offset, DIRECTION.FORCE_RIGHT);\n      if (this.offset !== this.block.value.length) return true;\n    });\n  }\n\n  pushRightBeforeInput (): boolean {\n    return this._pushRight(() => {\n      if (this.block.isFixed) return;\n\n      // const o = this.offset;\n      this.offset = this.block.nearestInputPos(this.offset, DIRECTION.NONE);\n      // HACK cases like (STILL DOES NOT WORK FOR NESTED)\n      // aa|X\n      // aa<X|[]>X_    - this will not work\n      // if (o && o === this.offset && this.block instanceof PatternInputDefinition) continue;\n      return true;\n    });\n  }\n\n  pushRightBeforeRequired (): boolean {\n    return this._pushRight(() => {\n      if (this.block.isFixed || this.block.isOptional && !this.block.value) return;\n\n      // TODO check |[*]XX_\n      this.offset = this.block.nearestInputPos(this.offset, DIRECTION.NONE);\n      return true;\n    });\n  }\n}\n","// @flow\nimport Masked, { type MaskedOptions } from './base.js';\nimport IMask from '../core/holder.js';\n\n\n/** Masking by RegExp */\nexport default\nclass MaskedRegExp extends Masked<RegExp> {\n  /**\n    @override\n    @param {Object} opts\n  */\n  _update (opts: $Shape<MaskedOptions<RegExp>>) {\n    if (opts.mask) opts.validate = (value) => value.search(opts.mask) >= 0;\n    super._update(opts);\n  }\n}\n\n\nIMask.MaskedRegExp = MaskedRegExp;\n","// @flow\nimport {DIRECTION, type Direction, forceDirection} from '../core/utils.js';\nimport ChangeDetails from '../core/change-details.js';\nimport Masked, { type AppendFlags, type ExtractFlags, type MaskedOptions, type MaskedState } from './base.js';\nimport PatternInputDefinition, { DEFAULT_INPUT_DEFINITIONS, type Definitions } from './pattern/input-definition.js';\nimport PatternFixedDefinition from './pattern/fixed-definition.js';\nimport { type TailDetails } from '../core/tail-details.js';\nimport ChunksTailDetails from './pattern/chunk-tail-details.js';\nimport ContinuousTailDetails from '../core/continuous-tail-details.js';\nimport { type PatternBlock } from './pattern/block.js';\nimport PatternCursor from './pattern/cursor.js';\nimport createMask from './factory.js';\nimport IMask from '../core/holder.js';\nimport './regexp.js';  // support for default definitions which are regexp's\n\n\ntype MaskedPatternOptions = {\n  ...MaskedOptions<string>,\n  definitions?: $PropertyType<MaskedPattern, 'definitions'>,\n  blocks?: $PropertyType<MaskedPattern, 'blocks'>,\n  placeholderChar?: $PropertyType<MaskedPattern, 'placeholderChar'>,\n  displayChar?: $PropertyType<MaskedPattern, 'displayChar'>,\n  lazy?: $PropertyType<MaskedPattern, 'lazy'>,\n};\n\ntype MaskedPatternState = {|\n  ...MaskedState,\n  _blocks: Array<*>,\n|};\n\ntype BlockPosData = {\n  index: number,\n  offset: number,\n};\n\n/**\n  Pattern mask\n  @param {Object} opts\n  @param {Object} opts.blocks\n  @param {Object} opts.definitions\n  @param {string} opts.placeholderChar\n  @param {string} opts.displayChar\n  @param {boolean} opts.lazy\n*/\nexport default\nclass MaskedPattern extends Masked<string> {\n  static DEFAULTS: any;\n  static STOP_CHAR: string;\n  static ESCAPE_CHAR: string;\n  static InputDefinition: Class<PatternInputDefinition>;\n  static FixedDefinition: Class<PatternFixedDefinition>;\n\n  /** */\n  blocks: {[string]: MaskedOptions<any>};\n  /** */\n  definitions: Definitions;\n  /** Single char for empty input */\n  placeholderChar: string;\n  /** Single char for filled input */\n  displayChar: string;\n  /** Show placeholder only when needed */\n  lazy: boolean;\n  _blocks: Array<PatternBlock>;\n  _maskedBlocks: {[string]: Array<number>};\n  _stops: Array<number>;\n\n  constructor (opts: any={}) {  // TODO type $Shape<MaskedPatternOptions>={} does not work\n    opts.definitions = Object.assign({}, DEFAULT_INPUT_DEFINITIONS, opts.definitions);\n    super({\n      ...MaskedPattern.DEFAULTS,\n      ...opts,\n    });\n  }\n\n  /**\n    @override\n    @param {Object} opts\n  */\n  _update (opts: $Shape<MaskedPatternOptions>={}) {\n    opts.definitions = Object.assign({}, this.definitions, opts.definitions);\n    super._update(opts);\n    this._rebuildMask();\n  }\n\n  /** */\n  _rebuildMask () {\n    const defs = this.definitions;\n    this._blocks = [];\n    this._stops = [];\n    this._maskedBlocks = {};\n\n    let pattern = this.mask;\n    if (!pattern || !defs) return;\n\n    let unmaskingBlock = false;\n    let optionalBlock = false;\n\n    for (let i=0; i<pattern.length; ++i) {\n      if (this.blocks) {\n        const p = pattern.slice(i);\n        const bNames = Object.keys(this.blocks).filter(bName => p.indexOf(bName) === 0);\n        // order by key length\n        bNames.sort((a, b) => b.length - a.length);\n        // use block name with max length\n        const bName = bNames[0];\n        if (bName) {\n          // $FlowFixMe no ideas\n          const maskedBlock = createMask({\n            parent: this,\n            lazy: this.lazy,\n            eager: this.eager,\n            placeholderChar: this.placeholderChar,\n            displayChar: this.displayChar,\n            overwrite: this.overwrite,\n            ...this.blocks[bName],\n          });\n\n          if (maskedBlock) {\n            this._blocks.push(maskedBlock);\n\n            // store block index\n            if (!this._maskedBlocks[bName]) this._maskedBlocks[bName] = [];\n            this._maskedBlocks[bName].push(this._blocks.length - 1);\n          }\n\n          i += bName.length - 1;\n          continue;\n        }\n      }\n\n      let char = pattern[i];\n      let isInput = char in defs;\n\n      if (char === MaskedPattern.STOP_CHAR) {\n        this._stops.push(this._blocks.length);\n        continue;\n      }\n\n      if (char === '{' || char === '}') {\n        unmaskingBlock = !unmaskingBlock;\n        continue;\n      }\n\n      if (char === '[' || char === ']') {\n        optionalBlock = !optionalBlock;\n        continue;\n      }\n\n      if (char === MaskedPattern.ESCAPE_CHAR) {\n        ++i;\n        char = pattern[i];\n        if (!char) break;\n        isInput = false;\n      }\n\n      const maskOpts = defs[char]?.mask && !(defs[char]?.mask.prototype instanceof IMask.Masked) ? defs[char] : { mask: defs[char] };\n      const def = isInput ?\n        new PatternInputDefinition({\n          parent: this,\n          isOptional: optionalBlock,\n          lazy: this.lazy,\n          eager: this.eager,\n          placeholderChar: this.placeholderChar,\n          displayChar: this.displayChar,\n          ...maskOpts,\n        }) :\n        new PatternFixedDefinition({\n          char,\n          eager: this.eager,\n          isUnmasking: unmaskingBlock,\n        });\n\n      this._blocks.push(def);\n    }\n  }\n\n  /**\n    @override\n  */\n  get state (): MaskedPatternState {\n    return {\n      ...super.state,\n      _blocks: this._blocks.map(b => b.state),\n    };\n  }\n\n  set state (state: MaskedPatternState) {\n    const {_blocks, ...maskedState} = state;\n    this._blocks.forEach((b, bi) => b.state = _blocks[bi]);\n    super.state = maskedState;\n  }\n\n  /**\n    @override\n  */\n  reset () {\n    super.reset();\n    this._blocks.forEach(b => b.reset());\n  }\n\n  /**\n    @override\n  */\n  get isComplete (): boolean {\n    return this._blocks.every(b => b.isComplete);\n  }\n\n  /**\n    @override\n  */\n  get isFilled (): boolean {\n    return this._blocks.every(b => b.isFilled);\n  }\n\n  get isFixed (): boolean {\n    return this._blocks.every(b => b.isFixed);\n  }\n\n  get isOptional (): boolean {\n    return this._blocks.every(b => b.isOptional);\n  }\n\n  /**\n    @override\n  */\n  doCommit () {\n    this._blocks.forEach(b => b.doCommit());\n    super.doCommit();\n  }\n\n  /**\n    @override\n  */\n  get unmaskedValue (): string {\n    return this._blocks.reduce((str, b) => str += b.unmaskedValue, '');\n  }\n\n  set unmaskedValue (unmaskedValue: string) {\n    super.unmaskedValue = unmaskedValue;\n  }\n\n  /**\n    @override\n  */\n  get value (): string {\n    // TODO return _value when not in change?\n    return this._blocks.reduce((str, b) => str += b.value, '');\n  }\n\n  set value (value: string) {\n    super.value = value;\n  }\n\n  get displayValue (): string {\n    return this._blocks.reduce((str, b) => str += b.displayValue, '');\n  }\n\n  /**\n    @override\n  */\n  appendTail (tail: string | String | TailDetails): ChangeDetails {\n    return super.appendTail(tail).aggregate(this._appendPlaceholder());\n  }\n\n  /**\n    @override\n  */\n  _appendEager (): ChangeDetails {\n    const details = new ChangeDetails();\n\n    let startBlockIndex = this._mapPosToBlock(this.value.length)?.index;\n    if (startBlockIndex == null) return details;\n\n    // TODO test if it works for nested pattern masks\n    if (this._blocks[startBlockIndex].isFilled) ++startBlockIndex;\n\n    for (let bi=startBlockIndex; bi<this._blocks.length; ++bi) {\n      const d = this._blocks[bi]._appendEager();\n      if (!d.inserted) break;\n\n      details.aggregate(d);\n    }\n\n    return details;\n  }\n\n  /**\n    @override\n  */\n  _appendCharRaw (ch: string, flags: AppendFlags={}): ChangeDetails {\n    const blockIter = this._mapPosToBlock(this.value.length);\n    const details = new ChangeDetails();\n    if (!blockIter) return details;\n\n    for (let bi=blockIter.index; ; ++bi) {\n      const block = this._blocks[bi];\n      if (!block) break;\n\n      const blockDetails = block._appendChar(ch, { ...flags, _beforeTailState: flags._beforeTailState?._blocks?.[bi] });\n\n      const skip = blockDetails.skip;\n      details.aggregate(blockDetails);\n\n      if (skip || blockDetails.rawInserted) break; // go next char\n    }\n\n    return details;\n  }\n\n  /**\n    @override\n  */\n  extractTail (fromPos?: number=0, toPos?: number=this.value.length): ChunksTailDetails {\n    const chunkTail = new ChunksTailDetails();\n    if (fromPos === toPos) return chunkTail;\n\n    this._forEachBlocksInRange(fromPos, toPos, (b, bi, bFromPos, bToPos) => {\n      const blockChunk = b.extractTail(bFromPos, bToPos);\n      blockChunk.stop = this._findStopBefore(bi);\n      blockChunk.from = this._blockStartPos(bi);\n      if (blockChunk instanceof ChunksTailDetails) blockChunk.blockIndex = bi;\n\n      chunkTail.extend(blockChunk);\n    });\n\n    return chunkTail;\n  }\n\n  /**\n    @override\n  */\n  extractInput (fromPos?: number=0, toPos?: number=this.value.length, flags: ExtractFlags={}): string {\n    if (fromPos === toPos) return '';\n\n    let input = '';\n\n    this._forEachBlocksInRange(fromPos, toPos, (b, _, fromPos, toPos) => {\n      input += b.extractInput(fromPos, toPos, flags);\n    });\n\n    return input;\n  }\n\n  _findStopBefore (blockIndex: number): ?number {\n    let stopBefore;\n    for (let si=0; si<this._stops.length; ++si) {\n      const stop = this._stops[si];\n      if (stop <= blockIndex) stopBefore = stop;\n      else break;\n    }\n    return stopBefore;\n  }\n\n  /** Appends placeholder depending on laziness */\n  _appendPlaceholder (toBlockIndex: ?number): ChangeDetails {\n    const details = new ChangeDetails();\n    if (this.lazy && toBlockIndex == null) return details;\n\n    const startBlockIter = this._mapPosToBlock(this.value.length);\n    if (!startBlockIter) return details;\n\n    const startBlockIndex = startBlockIter.index;\n    const endBlockIndex = toBlockIndex != null ? toBlockIndex : this._blocks.length;\n\n    this._blocks.slice(startBlockIndex, endBlockIndex)\n      .forEach(b => {\n        if (!b.lazy || toBlockIndex != null) {\n          // $FlowFixMe `_blocks` may not be present\n          const args = b._blocks != null ? [b._blocks.length] : [];\n          const bDetails = b._appendPlaceholder(...args);\n          this._value += bDetails.inserted;\n          details.aggregate(bDetails);\n        }\n      });\n\n    return details;\n  }\n\n  /** Finds block in pos */\n  _mapPosToBlock (pos: number): ?BlockPosData {\n    let accVal = '';\n    for (let bi=0; bi<this._blocks.length; ++bi) {\n      const block = this._blocks[bi];\n      const blockStartPos = accVal.length;\n\n      accVal += block.value;\n\n      if (pos <= accVal.length) {\n        return {\n          index: bi,\n          offset: pos - blockStartPos,\n        };\n      }\n    }\n  }\n\n  /** */\n  _blockStartPos (blockIndex: number): number {\n    return this._blocks\n      .slice(0, blockIndex)\n      .reduce((pos, b) => pos += b.value.length, 0);\n  }\n\n  /** */\n  _forEachBlocksInRange (fromPos: number, toPos: number=this.value.length, fn: (block: PatternBlock, blockIndex: number, fromPos: number, toPos: number) => void) {\n    const fromBlockIter = this._mapPosToBlock(fromPos);\n\n    if (fromBlockIter) {\n      const toBlockIter = this._mapPosToBlock(toPos);\n      // process first block\n      const isSameBlock = toBlockIter && fromBlockIter.index === toBlockIter.index;\n      const fromBlockStartPos = fromBlockIter.offset;\n      const fromBlockEndPos = toBlockIter && isSameBlock ?\n        toBlockIter.offset :\n        this._blocks[fromBlockIter.index].value.length;\n      fn(this._blocks[fromBlockIter.index], fromBlockIter.index, fromBlockStartPos, fromBlockEndPos);\n\n      if (toBlockIter && !isSameBlock) {\n        // process intermediate blocks\n        for (let bi=fromBlockIter.index+1; bi<toBlockIter.index; ++bi) {\n          fn(this._blocks[bi], bi, 0, this._blocks[bi].value.length);\n        }\n\n        // process last block\n        fn(this._blocks[toBlockIter.index], toBlockIter.index, 0, toBlockIter.offset);\n      }\n    }\n  }\n\n  /**\n    @override\n  */\n  remove (fromPos: number=0, toPos: number=this.value.length): ChangeDetails {\n    const removeDetails = super.remove(fromPos, toPos);\n    this._forEachBlocksInRange(fromPos, toPos, (b, _, bFromPos, bToPos) => {\n      removeDetails.aggregate(b.remove(bFromPos, bToPos));\n    });\n    return removeDetails;\n  }\n\n  /**\n    @override\n  */\n  nearestInputPos (cursorPos: number, direction: Direction=DIRECTION.NONE): number {\n    if (!this._blocks.length) return 0;\n    const cursor = new PatternCursor(this, cursorPos);\n\n    if (direction === DIRECTION.NONE) {\n      // -------------------------------------------------\n      // NONE should only go out from fixed to the right!\n      // -------------------------------------------------\n      if (cursor.pushRightBeforeInput()) return cursor.pos;\n      cursor.popState();\n      if (cursor.pushLeftBeforeInput()) return cursor.pos;\n      return this.value.length;\n    }\n\n    // FORCE is only about a|* otherwise is 0\n    if (direction === DIRECTION.LEFT || direction === DIRECTION.FORCE_LEFT) {\n      // try to break fast when *|a\n      if (direction === DIRECTION.LEFT) {\n        cursor.pushRightBeforeFilled();\n        if (cursor.ok && cursor.pos === cursorPos) return cursorPos;\n        cursor.popState();\n      }\n\n      // forward flow\n      cursor.pushLeftBeforeInput();\n      cursor.pushLeftBeforeRequired();\n      cursor.pushLeftBeforeFilled();\n\n      // backward flow\n      if (direction === DIRECTION.LEFT) {\n        cursor.pushRightBeforeInput();\n        cursor.pushRightBeforeRequired();\n        if (cursor.ok && cursor.pos <= cursorPos) return cursor.pos;\n        cursor.popState();\n        if (cursor.ok && cursor.pos <= cursorPos) return cursor.pos;\n        cursor.popState();\n      }\n      if (cursor.ok) return cursor.pos;\n      if (direction === DIRECTION.FORCE_LEFT) return 0;\n\n      cursor.popState();\n      if (cursor.ok) return cursor.pos;\n\n      cursor.popState();\n      if (cursor.ok) return cursor.pos;\n\n      // cursor.popState();\n      // if (\n      //   cursor.pushRightBeforeInput() &&\n      //   // TODO HACK for lazy if has aligned left inside fixed and has came to the start - use start position\n      //   (!this.lazy || this.extractInput())\n      // ) return cursor.pos;\n\n      return 0;\n    }\n\n    if (direction === DIRECTION.RIGHT || direction === DIRECTION.FORCE_RIGHT) {\n      // forward flow\n      cursor.pushRightBeforeInput();\n      cursor.pushRightBeforeRequired();\n\n      if (cursor.pushRightBeforeFilled()) return cursor.pos;\n      if (direction === DIRECTION.FORCE_RIGHT) return this.value.length;\n\n      // backward flow\n      cursor.popState();\n      if (cursor.ok) return cursor.pos;\n\n      cursor.popState();\n      if (cursor.ok) return cursor.pos;\n\n      return this.nearestInputPos(cursorPos, DIRECTION.LEFT);\n    }\n\n    return cursorPos;\n  }\n\n  /** Get block by name */\n  maskedBlock (name: string): ?PatternBlock {\n    return this.maskedBlocks(name)[0];\n  }\n\n  /** Get all blocks by name */\n  maskedBlocks (name: string): Array<PatternBlock> {\n    const indices = this._maskedBlocks[name];\n    if (!indices) return [];\n    return indices.map(gi => this._blocks[gi]);\n  }\n}\nMaskedPattern.DEFAULTS = {\n  lazy: true,\n  placeholderChar: '_'\n};\nMaskedPattern.STOP_CHAR = '`';\nMaskedPattern.ESCAPE_CHAR = '\\\\';\nMaskedPattern.InputDefinition = PatternInputDefinition;\nMaskedPattern.FixedDefinition = PatternFixedDefinition;\n\n\nIMask.MaskedPattern = MaskedPattern;\n","// @flow\nimport MaskedPattern from './pattern.js';\nimport ChangeDetails from '../core/change-details.js';\nimport { normalizePrepare } from '../core/utils.js';\nimport { type AppendFlags } from './base.js';\nimport IMask from '../core/holder.js';\n\n\n/** Pattern which accepts ranges */\nexport default\nclass MaskedRange extends MaskedPattern {\n  /**\n    Optionally sets max length of pattern.\n    Used when pattern length is longer then `to` param length. Pads zeros at start in this case.\n  */\n  maxLength: number;\n  /** Min bound */\n  from: number;\n  /** Max bound */\n  to: number;\n  /** */\n  autofix: boolean | 'pad';\n\n  get _matchFrom (): number {\n    return this.maxLength - String(this.from).length;\n  }\n\n  /**\n    @override\n  */\n  _update (opts: any) {  // TODO type\n    opts = {\n      to: this.to || 0,\n      from: this.from || 0,\n      maxLength: this.maxLength || 0,\n      ...opts,\n    };\n\n    let maxLength = String(opts.to).length;\n    if (opts.maxLength != null) maxLength = Math.max(maxLength, opts.maxLength);\n    opts.maxLength = maxLength;\n\n    const fromStr = String(opts.from).padStart(maxLength, '0');\n    const toStr = String(opts.to).padStart(maxLength, '0');\n    let sameCharsCount = 0;\n    while (sameCharsCount < toStr.length && toStr[sameCharsCount] === fromStr[sameCharsCount]) ++sameCharsCount;\n    opts.mask = toStr.slice(0, sameCharsCount).replace(/0/g, '\\\\0') + '0'.repeat(maxLength - sameCharsCount);\n\n    super._update(opts);\n  }\n\n  /**\n    @override\n  */\n  get isComplete (): boolean {\n    return super.isComplete && Boolean(this.value);\n  }\n\n  boundaries (str: string): [string, string] {\n    let minstr = '';\n    let maxstr = '';\n\n    const [, placeholder, num] = str.match(/^(\\D*)(\\d*)(\\D*)/) || [];\n    if (num) {\n      minstr = '0'.repeat(placeholder.length) + num;\n      maxstr = '9'.repeat(placeholder.length) + num;\n    }\n    minstr = minstr.padEnd(this.maxLength, '0');\n    maxstr = maxstr.padEnd(this.maxLength, '9');\n\n    return [minstr, maxstr];\n  }\n\n  // TODO str is a single char everytime\n  /**\n    @override\n  */ \n  doPrepare (ch: string, flags: AppendFlags={}): string | [string, ChangeDetails] {\n    let details: ChangeDetails;\n    [ch, details] = normalizePrepare(super.doPrepare(ch.replace(/\\D/g, ''), flags));\n\n    if (!this.autofix || !ch) return ch;\n\n    const fromStr = String(this.from).padStart(this.maxLength, '0');\n    const toStr = String(this.to).padStart(this.maxLength, '0');\n\n    let nextVal = this.value + ch;\n    if (nextVal.length > this.maxLength) return '';\n\n    const [minstr, maxstr] = this.boundaries(nextVal);\n\n    if (Number(maxstr) < this.from) return fromStr[nextVal.length - 1];\n\n    if (Number(minstr) > this.to) {\n      if (this.autofix === 'pad' && nextVal.length < this.maxLength) {\n        return ['', details.aggregate(this.append(fromStr[nextVal.length - 1]+ch, flags))];\n      }\n      return toStr[nextVal.length - 1];\n    }\n\n    return ch;\n  }\n\n  /**\n    @override\n  */\n  doValidate (...args: *): boolean {\n    const str = this.value;\n\n    const firstNonZero = str.search(/[^0]/);\n    if (firstNonZero === -1 && str.length <= this._matchFrom) return true;\n\n    const [minstr, maxstr] = this.boundaries(str);\n\n    return this.from <= Number(maxstr) && Number(minstr) <= this.to &&\n      super.doValidate(...args);\n  }\n}\n\n\nIMask.MaskedRange = MaskedRange;\n","// @flow\nimport MaskedPattern from './pattern.js';\nimport MaskedRange from './range.js';\nimport IMask from '../core/holder.js';\n\n\n/** Date mask */\nexport default\nclass MaskedDate extends MaskedPattern {\n  static GET_DEFAULT_BLOCKS: () => {[string]: any};\n  static DEFAULTS: any;\n\n  /** Pattern mask for date according to {@link MaskedDate#format} */\n  pattern: string;\n  /** Start date */\n  min: ?Date;\n  /** End date */\n  max: ?Date;\n  /** */\n  autofix: boolean | 'pad';\n\n  /**\n    @param {Object} opts\n  */\n  constructor (opts: any) {\n    super({\n      ...MaskedDate.DEFAULTS,\n      ...opts\n    });\n  }\n\n  /**\n    @override\n  */\n  _update (opts: any) {\n    if (opts.mask === Date) delete opts.mask;\n    if (opts.pattern) opts.mask = opts.pattern;\n\n    const blocks = opts.blocks;\n    opts.blocks = Object.assign({}, MaskedDate.GET_DEFAULT_BLOCKS());\n    // adjust year block\n    if (opts.min) opts.blocks.Y.from = opts.min.getFullYear();\n    if (opts.max) opts.blocks.Y.to = opts.max.getFullYear();\n    if (opts.min && opts.max && opts.blocks.Y.from === opts.blocks.Y.to\n    ) {\n      opts.blocks.m.from = opts.min.getMonth() + 1;\n      opts.blocks.m.to = opts.max.getMonth() + 1;\n\n      if (opts.blocks.m.from === opts.blocks.m.to) {\n        opts.blocks.d.from = opts.min.getDate();\n        opts.blocks.d.to = opts.max.getDate();\n      }\n    }\n    Object.assign(opts.blocks, this.blocks, blocks);\n\n    // add autofix\n    Object.keys(opts.blocks).forEach(bk => {\n      const b = opts.blocks[bk];\n      if (!('autofix' in b) && 'autofix' in opts) b.autofix = opts.autofix;\n    });\n\n    super._update(opts);\n  }\n\n  /**\n    @override\n  */\n  doValidate (...args: *): boolean {\n    const date = this.date;\n\n    return super.doValidate(...args) &&\n      (!this.isComplete ||\n        this.isDateExist(this.value) && date != null &&\n        (this.min == null || this.min <= date) &&\n        (this.max == null || date <= this.max));\n  }\n\n  /** Checks if date is exists */\n  isDateExist (str: string): boolean {\n    return this.format(this.parse(str, this), this).indexOf(str) >= 0;\n  }\n\n  /** Parsed Date */\n  get date (): ?Date {\n    return this.typedValue;\n  }\n  set date (date: Date) {\n    this.typedValue = date;\n  }\n\n  /**\n    @override\n  */\n  get typedValue (): ?Date {\n    return this.isComplete ? super.typedValue : null;\n  }\n  set typedValue (value: Date) {\n    super.typedValue = value;\n  }\n\n  /**\n    @override\n  */\n  maskEquals (mask: any): boolean {\n    return mask === Date || super.maskEquals(mask);\n  }\n}\nMaskedDate.DEFAULTS = {\n  pattern: 'd{.}`m{.}`Y',\n  format: date => {\n    if (!date) return '';\n\n    const day = String(date.getDate()).padStart(2, '0');\n    const month = String(date.getMonth() + 1).padStart(2, '0');\n    const year = date.getFullYear();\n\n    return [day, month, year].join('.');\n  },\n  parse: str => {\n    const [day, month, year] = str.split('.');\n    return new Date(year, month - 1, day);\n  },\n};\nMaskedDate.GET_DEFAULT_BLOCKS = () => ({\n  d: {\n    mask: MaskedRange,\n    from: 1,\n    to: 31,\n    maxLength: 2,\n  },\n  m: {\n    mask: MaskedRange,\n    from: 1,\n    to: 12,\n    maxLength: 2,\n  },\n  Y: {\n    mask: MaskedRange,\n    from: 1900,\n    to: 9999,\n  }\n});\n\n\nIMask.MaskedDate = MaskedDate;\n","// @flow\nimport IMask from '../core/holder.js';\n\n\nexport\ntype ElementEvent =\n  'selectionChange' |\n  'input' |\n  'drop' |\n  'click' |\n  'focus' |\n  'commit';\n\n/**\n  Generic element API to use with mask\n  @interface\n*/\nexport default\nclass MaskElement {\n  /** */\n  +_unsafeSelectionStart: number;\n  /** */\n  +_unsafeSelectionEnd: number;\n  /** */\n  value: string;\n\n  /** Safely returns selection start */\n  get selectionStart (): number {\n    let start;\n    try {\n      start = this._unsafeSelectionStart;\n    } catch (e) {}\n\n    return start != null ?\n      start :\n      this.value.length;\n  }\n\n  /** Safely returns selection end */\n  get selectionEnd (): number {\n    let end;\n    try {\n      end = this._unsafeSelectionEnd;\n    } catch (e) {}\n\n    return end != null ?\n      end :\n      this.value.length;\n  }\n\n  /** Safely sets element selection */\n  select (start: number, end: number) {\n    if (start == null || end == null ||\n      start === this.selectionStart && end === this.selectionEnd) return;\n\n    try {\n      this._unsafeSelect(start, end);\n    } catch (e) {}\n  }\n\n  /** Should be overriden in subclasses */\n  _unsafeSelect (start: number, end: number): void {}\n  /** Should be overriden in subclasses */\n  get isActive (): boolean { return false; }\n  /** Should be overriden in subclasses */\n  bindEvents (handlers: {[ElementEvent]: Function}) {}\n  /** Should be overriden in subclasses */\n  unbindEvents (): void {}\n}\n\n\nIMask.MaskElement = MaskElement;\n","// @flow\nimport MaskElement, {type ElementEvent} from './mask-element.js';\nimport IMask from '../core/holder.js';\n\n\n/** Bridge between HTMLElement and {@link Masked} */\nexport default\nclass HTMLMaskElement extends MaskElement {\n  /** Mapping between HTMLElement events and mask internal events */\n  static EVENTS_MAP: {[ElementEvent]: string};\n  /** HTMLElement to use mask on */\n  input: HTMLTextAreaElement | HTMLInputElement;\n  _handlers: {[string]: Function};\n\n  /**\n    @param {HTMLInputElement|HTMLTextAreaElement} input\n  */\n  constructor (input: HTMLTextAreaElement | HTMLInputElement) {\n    super();\n    this.input = input;\n    this._handlers = {};\n  }\n\n  /** */\n  // $FlowFixMe https://github.com/facebook/flow/issues/2839\n  get rootElement (): HTMLDocument {\n    return this.input.getRootNode?.() ?? document;\n  }\n\n  /**\n    Is element in focus\n    @readonly\n  */\n  get isActive (): boolean {\n    //$FlowFixMe\n    return this.input === this.rootElement.activeElement;\n  }\n\n  /**\n    Returns HTMLElement selection start\n    @override\n  */\n  get _unsafeSelectionStart (): number {\n    return this.input.selectionStart;\n  }\n\n  /**\n    Returns HTMLElement selection end\n    @override\n  */\n  get _unsafeSelectionEnd (): number {\n    return this.input.selectionEnd;\n  }\n\n  /**\n    Sets HTMLElement selection\n    @override\n  */\n  _unsafeSelect (start: number, end: number) {\n    this.input.setSelectionRange(start, end);\n  }\n\n  /**\n    HTMLElement value\n    @override\n  */\n  get value (): string {\n    return this.input.value;\n  }\n  set value (value: string) {\n    this.input.value = value;\n  }\n\n  /**\n    Binds HTMLElement events to mask internal events\n    @override\n  */\n  bindEvents (handlers: {[ElementEvent]: Function}) {\n    Object.keys(handlers)\n      .forEach(event => this._toggleEventHandler(HTMLMaskElement.EVENTS_MAP[event], handlers[event]));\n  }\n\n  /**\n    Unbinds HTMLElement events to mask internal events\n    @override\n  */\n  unbindEvents () {\n    Object.keys(this._handlers)\n      .forEach(event => this._toggleEventHandler(event));\n  }\n\n  /** */\n  _toggleEventHandler (event: string, handler?: Function): void {\n    if (this._handlers[event]) {\n      this.input.removeEventListener(event, this._handlers[event]);\n      delete this._handlers[event];\n    }\n\n    if (handler) {\n      this.input.addEventListener(event, handler);\n      this._handlers[event] = handler;\n    }\n  }\n}\nHTMLMaskElement.EVENTS_MAP = {\n  selectionChange: 'keydown',\n  input: 'input',\n  drop: 'drop',\n  click: 'click',\n  focus: 'focus',\n  commit: 'blur',\n};\n\n\nIMask.HTMLMaskElement = HTMLMaskElement;\n","// @flow\nimport HTMLMaskElement from './html-mask-element.js';\nimport IMask from '../core/holder.js';\n\n\nexport default\nclass HTMLContenteditableMaskElement extends HTMLMaskElement {\n  /**\n    Returns HTMLElement selection start\n    @override\n  */\n  get _unsafeSelectionStart (): number {\n    const root = this.rootElement;\n    const selection = root.getSelection && root.getSelection();\n    const anchorOffset = selection && selection.anchorOffset;\n    const focusOffset = selection && selection.focusOffset;\n    if (focusOffset == null || anchorOffset == null || anchorOffset < focusOffset) {\n      return anchorOffset;\n    }\n    return focusOffset;\n  }\n\n  /**\n    Returns HTMLElement selection end\n    @override\n  */\n  get _unsafeSelectionEnd (): number {\n    const root = this.rootElement;\n    const selection = root.getSelection && root.getSelection();\n    const anchorOffset = selection && selection.anchorOffset;\n    const focusOffset = selection && selection.focusOffset;\n    if (focusOffset == null || anchorOffset == null || anchorOffset > focusOffset) {\n      return anchorOffset;\n    }\n    return focusOffset;\n  }\n\n  /**\n    Sets HTMLElement selection\n    @override\n  */\n  _unsafeSelect (start: number, end: number) {\n    if (!this.rootElement.createRange) return;\n\n    const range = this.rootElement.createRange();\n    range.setStart(this.input.firstChild || this.input, start);\n    range.setEnd(this.input.lastChild || this.input, end);\n    const root = this.rootElement;\n    const selection = root.getSelection && root.getSelection();\n    if (selection) {\n      selection.removeAllRanges();\n      selection.addRange(range);\n    }\n  }\n\n  /**\n    HTMLElement value\n    @override\n  */\n  get value (): string {\n    // $FlowFixMe\n    return this.input.textContent;\n  }\n  set value (value: string) {\n    this.input.textContent = value;\n  }\n}\n\n\nIMask.HTMLContenteditableMaskElement = HTMLContenteditableMaskElement;\n","// @flow\nimport {objectIncludes, DIRECTION, type Selection} from '../core/utils.js';\nimport ActionDetails from '../core/action-details.js';\nimport MaskedDate from '../masked/date.js';\nimport createMask, {maskedClass} from '../masked/factory.js';\nimport type Masked from '../masked/base.js';\nimport {type Mask} from '../masked/base.js';\nimport MaskElement from './mask-element.js';\nimport HTMLMaskElement from './html-mask-element.js';\nimport HTMLContenteditableMaskElement from './html-contenteditable-mask-element.js';\nimport IMask from '../core/holder.js';\n\n\n/** Listens to element events and controls changes between element and {@link Masked} */\nexport default\nclass InputMask {\n  /**\n    View element\n    @readonly\n  */\n  el: MaskElement;\n\n  /**\n    Internal {@link Masked} model\n    @readonly\n  */\n  masked: Masked<*>;\n  alignCursor: () => void;\n  alignCursorFriendly: () => void;\n\n  _listeners: {[string]: Array<Function>};\n  _value: string;\n  _changingCursorPos: number;\n  _unmaskedValue: string;\n  _saveSelection: (?Event) => void;\n  _selection: Selection;\n  _onInput: () => void;\n  _onChange: () => void;\n  _onDrop: (Event) => void;\n  _onFocus: (Event) => void;\n  _onClick: (Event) => void;\n  _cursorChanging: ?TimeoutID;\n  _inputEvent: ?InputEvent;\n\n  /**\n    @param {MaskElement|HTMLInputElement|HTMLTextAreaElement} el\n    @param {Object} opts\n  */\n  constructor (el: MaskElement | HTMLTextAreaElement | HTMLInputElement, opts: {[string]: any} | Masked<*>) {\n    this.el =\n      (el instanceof MaskElement) ? el :\n      (el.isContentEditable && el.tagName !== 'INPUT' && el.tagName !== 'TEXTAREA') ? new HTMLContenteditableMaskElement(el) :\n      new HTMLMaskElement(el);\n    this.masked = createMask(opts);\n\n    this._listeners = {};\n    this._value = '';\n    this._unmaskedValue = '';\n\n    this._saveSelection = this._saveSelection.bind(this);\n    this._onInput = this._onInput.bind(this);\n    this._onChange = this._onChange.bind(this);\n    this._onDrop = this._onDrop.bind(this);\n    this._onFocus = this._onFocus.bind(this);\n    this._onClick = this._onClick.bind(this);\n    this.alignCursor = this.alignCursor.bind(this);\n    this.alignCursorFriendly = this.alignCursorFriendly.bind(this);\n\n    this._bindEvents();\n\n    // refresh\n    this.updateValue();\n    this._onChange();\n  }\n\n  /** Read or update mask */\n  get mask (): Mask {\n    return this.masked.mask;\n  }\n\n  maskEquals (mask: Mask): boolean {\n    return mask == null || this.masked?.maskEquals(mask);\n  }\n\n  set mask (mask: Mask) {\n    if (this.maskEquals(mask)) return;\n\n    // $FlowFixMe No ideas ... after update\n    if (!(mask instanceof IMask.Masked) && this.masked.constructor === maskedClass(mask)) {\n      this.masked.updateOptions({mask});\n      return;\n    }\n\n    const masked = createMask({mask});\n    masked.unmaskedValue = this.masked.unmaskedValue;\n    this.masked = masked;\n  }\n\n  /** Raw value */\n  get value (): string {\n    return this._value;\n  }\n\n  set value (str: string) {\n    if (this.value === str) return;\n\n    this.masked.value = str;\n    this.updateControl();\n    this.alignCursor();\n  }\n\n  /** Unmasked value */\n  get unmaskedValue (): string {\n    return this._unmaskedValue;\n  }\n\n  set unmaskedValue (str: string) {\n    if (this.unmaskedValue === str) return;\n\n    this.masked.unmaskedValue = str;\n    this.updateControl();\n    this.alignCursor();\n  }\n\n  /** Typed unmasked value */\n  get typedValue (): any {\n    return this.masked.typedValue;\n  }\n\n  set typedValue (val: any) {\n    if (this.masked.typedValueEquals(val)) return;\n\n    this.masked.typedValue = val;\n    this.updateControl();\n    this.alignCursor();\n  }\n\n  /** Display value */\n  get displayValue (): string {\n    return this.masked.displayValue;\n  }\n\n  /**\n    Starts listening to element events\n    @protected\n  */\n  _bindEvents () {\n    this.el.bindEvents({\n      selectionChange: this._saveSelection,\n      input: this._onInput,\n      drop: this._onDrop,\n      click: this._onClick,\n      focus: this._onFocus,\n      commit: this._onChange,\n    });\n  }\n\n  /**\n    Stops listening to element events\n    @protected\n   */\n  _unbindEvents () {\n    if (this.el) this.el.unbindEvents();\n  }\n\n  /**\n    Fires custom event\n    @protected\n   */\n  _fireEvent (ev: string, ...args: *) {\n    const listeners = this._listeners[ev];\n    if (!listeners) return;\n\n    listeners.forEach(l => l(...args));\n  }\n\n  /**\n    Current selection start\n    @readonly\n  */\n  get selectionStart (): number {\n    return this._cursorChanging ?\n      this._changingCursorPos :\n\n      this.el.selectionStart;\n  }\n\n  /** Current cursor position */\n  get cursorPos (): number {\n    return this._cursorChanging ?\n      this._changingCursorPos :\n\n      this.el.selectionEnd;\n  }\n  set cursorPos (pos: number) {\n    if (!this.el || !this.el.isActive) return;\n\n    this.el.select(pos, pos);\n    this._saveSelection();\n  }\n\n  /**\n    Stores current selection\n    @protected\n  */\n  _saveSelection (/* ev */) {\n    if (this.displayValue !== this.el.value) {\n      console.warn('Element value was changed outside of mask. Syncronize mask using `mask.updateValue()` to work properly.'); // eslint-disable-line no-console\n    }\n    this._selection = {\n      start: this.selectionStart,\n      end: this.cursorPos\n    };\n  }\n\n  /** Syncronizes model value from view */\n  updateValue () {\n    this.masked.value = this.el.value;\n    this._value = this.masked.value;\n  }\n\n  /** Syncronizes view from model value, fires change events */\n  updateControl () {\n    const newUnmaskedValue = this.masked.unmaskedValue;\n    const newValue = this.masked.value;\n    const newDisplayValue = this.displayValue;\n    const isChanged = (this.unmaskedValue !== newUnmaskedValue ||\n      this.value !== newValue);\n\n    this._unmaskedValue = newUnmaskedValue;\n    this._value = newValue;\n\n    if (this.el.value !== newDisplayValue) this.el.value = newDisplayValue;\n    if (isChanged) this._fireChangeEvents();\n  }\n\n  /** Updates options with deep equal check, recreates @{link Masked} model if mask type changes */\n  updateOptions (opts: {[string]: any}) {\n    const { mask, ...restOpts } = opts;\n\n    const updateMask = !this.maskEquals(mask);\n    const updateOpts = !objectIncludes(this.masked, restOpts);\n\n    if (updateMask) this.mask = mask;\n    if (updateOpts) this.masked.updateOptions(restOpts);\n\n    if (updateMask || updateOpts) this.updateControl();\n  }\n\n  /** Updates cursor */\n  updateCursor (cursorPos: number) {\n    if (cursorPos == null) return;\n    this.cursorPos = cursorPos;\n\n    // also queue change cursor for mobile browsers\n    this._delayUpdateCursor(cursorPos);\n  }\n\n  /**\n    Delays cursor update to support mobile browsers\n    @private\n  */\n  _delayUpdateCursor (cursorPos: number) {\n    this._abortUpdateCursor();\n    this._changingCursorPos = cursorPos;\n    this._cursorChanging = setTimeout(() => {\n      if (!this.el) return; // if was destroyed\n      this.cursorPos = this._changingCursorPos;\n      this._abortUpdateCursor();\n    }, 10);\n  }\n\n  /**\n    Fires custom events\n    @protected\n  */\n  _fireChangeEvents () {\n    this._fireEvent('accept', this._inputEvent);\n    if (this.masked.isComplete) this._fireEvent('complete', this._inputEvent);\n  }\n\n  /**\n    Aborts delayed cursor update\n    @private\n  */\n  _abortUpdateCursor () {\n    if (this._cursorChanging) {\n      clearTimeout(this._cursorChanging);\n      delete this._cursorChanging;\n    }\n  }\n\n  /** Aligns cursor to nearest available position */\n  alignCursor () {\n    this.cursorPos = this.masked.nearestInputPos(this.masked.nearestInputPos(this.cursorPos, DIRECTION.LEFT));\n  }\n\n  /** Aligns cursor only if selection is empty */\n  alignCursorFriendly () {\n    if (this.selectionStart !== this.cursorPos) return;  // skip if range is selected\n    this.alignCursor();\n  }\n\n  /** Adds listener on custom event */\n  on (ev: string, handler: Function): this {\n    if (!this._listeners[ev]) this._listeners[ev] = [];\n    this._listeners[ev].push(handler);\n    return this;\n  }\n\n  /** Removes custom event listener */\n  off (ev: string, handler: Function): this {\n    if (!this._listeners[ev]) return this;\n    if (!handler) {\n      delete this._listeners[ev];\n      return this;\n    }\n    const hIndex = this._listeners[ev].indexOf(handler);\n    if (hIndex >= 0) this._listeners[ev].splice(hIndex, 1);\n    return this;\n  }\n\n  /** Handles view input event */\n  _onInput (e: InputEvent): void {\n    this._inputEvent = e;\n    this._abortUpdateCursor();\n\n    // fix strange IE behavior\n    if (!this._selection) return this.updateValue();\n\n    const details = new ActionDetails(\n      // new state\n      this.el.value, this.cursorPos,\n      // old state\n      this.displayValue, this._selection,\n    );\n\n    const oldRawValue = this.masked.rawInputValue;\n\n    const offset = this.masked.splice(\n      details.startChangePos,\n      details.removed.length,\n      details.inserted,\n      details.removeDirection,\n      { input: true, raw: true },\n    ).offset;\n\n    // force align in remove direction only if no input chars were removed\n    // otherwise we still need to align with NONE (to get out from fixed symbols for instance)\n    const removeDirection = oldRawValue === this.masked.rawInputValue ?\n      details.removeDirection :\n      DIRECTION.NONE;\n\n    let cursorPos = this.masked.nearestInputPos(\n      details.startChangePos + offset,\n      removeDirection,\n    );\n    if (removeDirection !== DIRECTION.NONE) cursorPos = this.masked.nearestInputPos(cursorPos, DIRECTION.NONE);\n\n    this.updateControl();\n    this.updateCursor(cursorPos);\n    delete this._inputEvent;\n  }\n\n  /** Handles view change event and commits model value */\n  _onChange () {\n    if (this.displayValue !== this.el.value) {\n      this.updateValue();\n    }\n    this.masked.doCommit();\n    this.updateControl();\n    this._saveSelection();\n  }\n\n  /** Handles view drop event, prevents by default */\n  _onDrop (ev: Event) {\n    ev.preventDefault();\n    ev.stopPropagation();\n  }\n\n  /** Restore last selection on focus */\n  _onFocus (ev: Event) {\n    this.alignCursorFriendly();\n  }\n\n  /** Restore last selection on focus */\n  _onClick (ev: Event) {\n    this.alignCursorFriendly();\n  }\n\n  /** Unbind view events and removes element reference */\n  destroy () {\n    this._unbindEvents();\n    // $FlowFixMe why not do so?\n    this._listeners.length = 0;\n    // $FlowFixMe\n    delete this.el;\n  }\n}\n\n\nIMask.InputMask = InputMask;\n","// @flow\nimport MaskedPattern from './pattern.js';\nimport IMask from '../core/holder.js';\n\n\n/** Pattern which validates enum values */\nexport default\nclass MaskedEnum extends MaskedPattern {\n  enum: Array<string>;\n\n  /**\n    @override\n    @param {Object} opts\n  */\n  _update (opts: any) {  // TODO type\n    if (opts.enum) opts.mask = '*'.repeat(opts.enum[0].length);\n\n    super._update(opts);\n  }\n\n  /**\n    @override\n  */\n  doValidate (...args: *): boolean {\n    return this.enum.some(e => e.indexOf(this.unmaskedValue) >= 0) &&\n      super.doValidate(...args);\n  }\n}\n\n\nIMask.MaskedEnum = MaskedEnum;\n","// @flow\nimport { escapeRegExp, indexInDirection, posInDirection, type Direction, DIRECTION, normalizePrepare } from '../core/utils.js';\nimport ChangeDetails from '../core/change-details.js';\nimport { type TailDetails } from '../core/tail-details.js';\n\nimport Masked, { type MaskedOptions, type ExtractFlags, type AppendFlags } from './base.js';\nimport IMask from '../core/holder.js';\n\n\ntype MaskedNumberOptions = {\n  ...MaskedOptions<Class<Number>>,\n  radix: $PropertyType<MaskedNumber, 'radix'>,\n  thousandsSeparator: $PropertyType<MaskedNumber, 'thousandsSeparator'>,\n  mapToRadix: $PropertyType<MaskedNumber, 'mapToRadix'>,\n  scale: $PropertyType<MaskedNumber, 'scale'>,\n  signed: $PropertyType<MaskedNumber, 'signed'>,\n  normalizeZeros: $PropertyType<MaskedNumber, 'normalizeZeros'>,\n  padFractionalZeros: $PropertyType<MaskedNumber, 'padFractionalZeros'>,\n};\n\n/**\n  Number mask\n  @param {Object} opts\n  @param {string} opts.radix - Single char\n  @param {string} opts.thousandsSeparator - Single char\n  @param {Array<string>} opts.mapToRadix - Array of single chars\n  @param {number} opts.min\n  @param {number} opts.max\n  @param {number} opts.scale - Digits after point\n  @param {boolean} opts.signed - Allow negative\n  @param {boolean} opts.normalizeZeros - Flag to remove leading and trailing zeros in the end of editing\n  @param {boolean} opts.padFractionalZeros - Flag to pad trailing zeros after point in the end of editing\n*/\nexport default\nclass MaskedNumber extends Masked<Class<Number>> {\n  static DEFAULTS: $Shape<MaskedNumberOptions>;\n  static UNMASKED_RADIX: string;\n\n  /** Single char */\n  radix: string;\n  /** Single char */\n  thousandsSeparator: string;\n  /** Array of single chars */\n  mapToRadix: Array<string>;\n  /** */\n  min: number;\n  /** */\n  max: number;\n  /** Digits after point */\n  scale: number;\n  /** */\n  signed: boolean;\n  /** Flag to remove leading and trailing zeros in the end of editing */\n  normalizeZeros: boolean;\n  /** Flag to pad trailing zeros after point in the end of editing */\n  padFractionalZeros: boolean;\n\n  _numberRegExp: RegExp;\n  _thousandsSeparatorRegExp: RegExp;\n  _mapToRadixRegExp: RegExp;\n  _separatorsProcessed: boolean;\n\n  constructor (opts: $Shape<MaskedNumberOptions>) {\n    super({\n      ...MaskedNumber.DEFAULTS,\n      ...opts\n    });\n  }\n\n  /**\n    @override\n  */\n  _update (opts: MaskedNumberOptions) {\n    super._update(opts);\n    this._updateRegExps();\n  }\n\n  /** */\n  _updateRegExps () {\n    let start = '^' + (this.allowNegative ? '[+|\\\\-]?' : '');\n    let mid = '\\\\d*';\n    let end = (this.scale ?\n      `(${escapeRegExp(this.radix)}\\\\d{0,${this.scale}})?` :\n      '') + '$';\n\n    this._numberRegExp = new RegExp(start + mid + end);\n    this._mapToRadixRegExp = new RegExp(`[${this.mapToRadix.map(escapeRegExp).join('')}]`, 'g');\n    this._thousandsSeparatorRegExp = new RegExp(escapeRegExp(this.thousandsSeparator), 'g');\n  }\n\n  /** */\n  _removeThousandsSeparators (value: string): string {\n    return value.replace(this._thousandsSeparatorRegExp, '');\n  }\n\n  /** */\n  _insertThousandsSeparators (value: string): string {\n    // https://stackoverflow.com/questions/2901102/how-to-print-a-number-with-commas-as-thousands-separators-in-javascript\n    const parts = value.split(this.radix);\n    parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, this.thousandsSeparator);\n    return parts.join(this.radix);\n  }\n\n  /**\n    @override\n  */\n  doPrepare (ch: string, flags: AppendFlags={}): string | [string, ChangeDetails] {\n    ch = this._removeThousandsSeparators(\n      this.scale && this.mapToRadix.length && (\n        /*\n          radix should be mapped when\n          1) input is done from keyboard = flags.input && flags.raw\n          2) unmasked value is set = !flags.input && !flags.raw\n          and should not be mapped when\n          1) value is set = flags.input && !flags.raw\n          2) raw value is set = !flags.input && flags.raw\n        */\n        flags.input && flags.raw ||\n        !flags.input && !flags.raw\n      ) ? ch.replace(this._mapToRadixRegExp, this.radix) : ch\n    );\n    const [prepCh, details] = normalizePrepare(super.doPrepare(ch, flags));\n    if (ch && !prepCh) details.skip = true;\n    return [prepCh, details];\n  }\n\n  /** */\n  _separatorsCount (to: number, extendOnSeparators: boolean=false): number {\n    let count = 0;\n\n    for (let pos = 0; pos < to; ++pos) {\n      if (this._value.indexOf(this.thousandsSeparator, pos) === pos) {\n        ++count;\n        if (extendOnSeparators) to += this.thousandsSeparator.length;\n      }\n    }\n\n    return count;\n  }\n\n  /** */\n  _separatorsCountFromSlice (slice: string=this._value): number {\n    return this._separatorsCount(this._removeThousandsSeparators(slice).length, true);\n  }\n\n  /**\n    @override\n  */\n  extractInput (fromPos?: number=0, toPos?: number=this.value.length, flags?: ExtractFlags): string {\n    [fromPos, toPos] = this._adjustRangeWithSeparators(fromPos, toPos);\n\n    return this._removeThousandsSeparators(super.extractInput(fromPos, toPos, flags));\n  }\n\n  /**\n    @override\n  */\n  _appendCharRaw (ch: string, flags: AppendFlags={}): ChangeDetails {\n    if (!this.thousandsSeparator) return super._appendCharRaw(ch, flags);\n\n    const prevBeforeTailValue = flags.tail && flags._beforeTailState ?\n      flags._beforeTailState._value :\n      this._value;\n    const prevBeforeTailSeparatorsCount = this._separatorsCountFromSlice(prevBeforeTailValue);\n    this._value = this._removeThousandsSeparators(this.value);\n\n    const appendDetails = super._appendCharRaw(ch, flags);\n\n    this._value = this._insertThousandsSeparators(this._value);\n    const beforeTailValue = flags.tail && flags._beforeTailState ?\n      flags._beforeTailState._value :\n      this._value;\n    const beforeTailSeparatorsCount = this._separatorsCountFromSlice(beforeTailValue);\n\n    appendDetails.tailShift += (beforeTailSeparatorsCount - prevBeforeTailSeparatorsCount) * this.thousandsSeparator.length;\n    appendDetails.skip = !appendDetails.rawInserted && ch === this.thousandsSeparator;\n    return appendDetails;\n  }\n\n  /** */\n  _findSeparatorAround (pos: number): number {\n    if (this.thousandsSeparator) {\n      const searchFrom = pos - this.thousandsSeparator.length + 1;\n      const separatorPos = this.value.indexOf(this.thousandsSeparator, searchFrom);\n      if (separatorPos <= pos) return separatorPos;\n    }\n\n    return -1;\n  }\n\n  _adjustRangeWithSeparators (from: number, to: number): [number, number] {\n    const separatorAroundFromPos = this._findSeparatorAround(from);\n    if (separatorAroundFromPos >= 0) from = separatorAroundFromPos;\n\n    const separatorAroundToPos = this._findSeparatorAround(to);\n    if (separatorAroundToPos >= 0) to = separatorAroundToPos + this.thousandsSeparator.length;\n    return [from, to];\n  }\n\n  /**\n    @override\n  */\n  remove (fromPos?: number=0, toPos?: number=this.value.length): ChangeDetails {\n    [fromPos, toPos] = this._adjustRangeWithSeparators(fromPos, toPos);\n\n    const valueBeforePos = this.value.slice(0, fromPos);\n    const valueAfterPos = this.value.slice(toPos);\n\n    const prevBeforeTailSeparatorsCount = this._separatorsCount(valueBeforePos.length);\n    this._value = this._insertThousandsSeparators(this._removeThousandsSeparators(valueBeforePos + valueAfterPos));\n    const beforeTailSeparatorsCount = this._separatorsCountFromSlice(valueBeforePos);\n\n    return new ChangeDetails({\n      tailShift: (beforeTailSeparatorsCount - prevBeforeTailSeparatorsCount) * this.thousandsSeparator.length,\n    });\n  }\n\n  /**\n    @override\n  */\n  nearestInputPos (cursorPos: number, direction?: Direction): number {\n    if (!this.thousandsSeparator) return cursorPos;\n\n    switch (direction) {\n      case DIRECTION.NONE:\n      case DIRECTION.LEFT:\n      case DIRECTION.FORCE_LEFT: {\n        const separatorAtLeftPos = this._findSeparatorAround(cursorPos - 1);\n        if (separatorAtLeftPos >= 0) {\n          const separatorAtLeftEndPos = separatorAtLeftPos + this.thousandsSeparator.length;\n          if (cursorPos < separatorAtLeftEndPos ||\n            this.value.length <= separatorAtLeftEndPos ||\n            direction === DIRECTION.FORCE_LEFT\n          ) {\n            return separatorAtLeftPos;\n          }\n        }\n        break;\n      }\n      case DIRECTION.RIGHT:\n      case DIRECTION.FORCE_RIGHT: {\n        const separatorAtRightPos = this._findSeparatorAround(cursorPos);\n        if (separatorAtRightPos >= 0) {\n          return separatorAtRightPos + this.thousandsSeparator.length;\n        }\n      }\n    }\n\n    return cursorPos;\n  }\n\n  /**\n    @override\n  */\n  doValidate (flags: AppendFlags): boolean {\n    // validate as string\n    let valid = Boolean(this._removeThousandsSeparators(this.value).match(this._numberRegExp));\n\n    if (valid) {\n      // validate as number\n      const number = this.number;\n      valid = valid && !isNaN(number) &&\n        // check min bound for negative values\n        (this.min == null || this.min >= 0 || this.min <= this.number) &&\n        // check max bound for positive values\n        (this.max == null || this.max <= 0 || this.number <= this.max);\n    }\n\n    return valid && super.doValidate(flags);\n  }\n\n  /**\n    @override\n  */\n  doCommit () {\n    if (this.value) {\n      const number = this.number;\n      let validnum = number;\n\n      // check bounds\n      if (this.min != null) validnum = Math.max(validnum, this.min);\n      if (this.max != null) validnum = Math.min(validnum, this.max);\n\n      if (validnum !== number) this.unmaskedValue = this.doFormat(validnum);\n\n      let formatted = this.value;\n\n      if (this.normalizeZeros) formatted = this._normalizeZeros(formatted);\n      if (this.padFractionalZeros && this.scale > 0) formatted = this._padFractionalZeros(formatted);\n\n      this._value = formatted;\n    }\n\n    super.doCommit();\n  }\n\n  /** */\n  _normalizeZeros (value: string): string {\n    const parts = this._removeThousandsSeparators(value).split(this.radix);\n\n    // remove leading zeros\n    parts[0] = parts[0].replace(/^(\\D*)(0*)(\\d*)/, (match, sign, zeros, num) => sign + num);\n    // add leading zero\n    if (value.length && !/\\d$/.test(parts[0])) parts[0] = parts[0] + '0';\n\n    if (parts.length > 1) {\n      parts[1] = parts[1].replace(/0*$/, '');  // remove trailing zeros\n      if (!parts[1].length) parts.length = 1;  // remove fractional\n    }\n\n    return this._insertThousandsSeparators(parts.join(this.radix));\n  }\n\n  /** */\n  _padFractionalZeros (value: string): string {\n    if (!value) return value;\n\n    const parts = value.split(this.radix);\n    if (parts.length < 2) parts.push('');\n    parts[1] = parts[1].padEnd(this.scale, '0');\n    return parts.join(this.radix);\n  }\n\n  /** */\n  doSkipInvalid (ch: string, flags: AppendFlags={}, checkTail?: TailDetails): boolean {\n    const dropFractional = this.scale === 0 && ch !== this.thousandsSeparator && (\n      ch === this.radix ||\n      ch === MaskedNumber.UNMASKED_RADIX ||\n      this.mapToRadix.includes(ch)\n    )\n    return super.doSkipInvalid(ch, flags, checkTail) && !dropFractional;\n  }\n\n  /**\n    @override\n  */\n  get unmaskedValue (): string {\n    return this._removeThousandsSeparators(\n      this._normalizeZeros(\n        this.value))\n      .replace(this.radix, MaskedNumber.UNMASKED_RADIX);\n  }\n\n  set unmaskedValue (unmaskedValue: string) {\n    super.unmaskedValue = unmaskedValue;\n  }\n\n  /**\n    @override\n  */\n  get typedValue (): number {\n    return this.doParse(this.unmaskedValue);\n  }\n\n  set typedValue (n: number) {\n    this.rawInputValue = this.doFormat(n).replace(MaskedNumber.UNMASKED_RADIX, this.radix);\n  }\n\n  /** Parsed Number */\n  get number (): number {\n    return this.typedValue;\n  }\n\n  set number (number: number) {\n    this.typedValue = number;\n  }\n\n  /**\n    Is negative allowed\n    @readonly\n  */\n  get allowNegative (): boolean {\n    return this.signed ||\n      (this.min != null && this.min < 0) ||\n      (this.max != null && this.max < 0);\n  }\n\n  /**\n    @override\n  */\n  typedValueEquals (value: any): boolean {\n    // handle  0 -> '' case (typed = 0 even if value = '')\n    // for details see https://github.com/uNmAnNeR/imaskjs/issues/134\n    return (\n      super.typedValueEquals(value) ||\n      MaskedNumber.EMPTY_VALUES.includes(value) && MaskedNumber.EMPTY_VALUES.includes(this.typedValue)\n    ) && !(value === 0 && this.value === '');\n  }\n}\n\nMaskedNumber.UNMASKED_RADIX = '.';\nMaskedNumber.DEFAULTS = {\n  radix: ',',\n  thousandsSeparator: '',\n  mapToRadix: [MaskedNumber.UNMASKED_RADIX],\n  scale: 2,\n  signed: false,\n  normalizeZeros: true,\n  padFractionalZeros: false,\n  parse: Number,\n  format: n => n.toLocaleString('en-US', { useGrouping: false, maximumFractionDigits: 20 }),\n};\nMaskedNumber.EMPTY_VALUES = [...Masked.EMPTY_VALUES, 0];\n\nIMask.MaskedNumber = MaskedNumber;\n","// @flow\nimport Masked, { type MaskedOptions } from './base.js';\nimport IMask from '../core/holder.js';\n\n\n/** Masking by custom Function */\nexport default\nclass MaskedFunction extends Masked<Function> {\n  /**\n    @override\n    @param {Object} opts\n  */\n  _update (opts: MaskedOptions<Function>) {\n    if (opts.mask) opts.validate = opts.mask;\n    super._update(opts);\n  }\n}\n\n\nIMask.MaskedFunction = MaskedFunction;\n","// @flow\nimport { objectIncludes } from '../core/utils.js';\nimport ChangeDetails from '../core/change-details.js';\nimport createMask from './factory.js';\nimport Masked, { type AppendFlags, type MaskedState } from './base.js';\nimport { normalizePrepare } from '../core/utils.js';\nimport { type TailDetails } from '../core/tail-details.js';\nimport IMask from '../core/holder.js';\n\n\ntype MaskedDynamicState = {|\n  ...MaskedState,\n  _rawInputValue: string,\n  compiledMasks: Array<*>,\n  currentMaskRef: ?Masked<*>,\n  currentMask: *,\n|};\n\ntype DynamicMaskType = Array<{[string]: any}>;\n/** Dynamic mask for choosing apropriate mask in run-time */\nexport default\nclass MaskedDynamic extends Masked<DynamicMaskType> {\n  /** Currently chosen mask */\n  currentMask: ?Masked<*>;\n  /** Compliled {@link Masked} options */\n  compiledMasks: Array<Masked<*>>;\n  /** Chooses {@link Masked} depending on input value */\n  dispatch: (string, Masked<*>, AppendFlags) => Masked<*>;\n\n  /**\n    @param {Object} opts\n  */\n  constructor (opts: any) {\n    super({\n      ...MaskedDynamic.DEFAULTS,\n      ...opts\n    });\n\n    this.currentMask = null;\n  }\n\n  /**\n    @override\n  */\n  _update (opts: any) {\n    super._update(opts);\n    if ('mask' in opts) {\n      // mask could be totally dynamic with only `dispatch` option\n      this.compiledMasks = Array.isArray(opts.mask) ?\n        opts.mask.map(m => createMask(m)) :\n        [];\n\n      // this.currentMask = this.doDispatch(''); // probably not needed but lets see\n    }\n  }\n\n  /**\n    @override\n  */\n  _appendCharRaw (ch: string, flags: AppendFlags={}): ChangeDetails {\n    const details = this._applyDispatch(ch, flags);\n\n    if (this.currentMask) {\n      details.aggregate(this.currentMask._appendChar(ch, this.currentMaskFlags(flags)));\n    }\n\n    return details;\n  }\n\n  _applyDispatch (appended: string='', flags: AppendFlags={}): ChangeDetails {\n    const prevValueBeforeTail = flags.tail && flags._beforeTailState != null ?\n      flags._beforeTailState._value :\n      this.value;\n    const inputValue = this.rawInputValue;\n    const insertValue = flags.tail && flags._beforeTailState != null ?\n      // $FlowFixMe - tired to fight with type system\n      flags._beforeTailState._rawInputValue :\n      inputValue;\n    const tailValue = inputValue.slice(insertValue.length);\n    const prevMask = this.currentMask;\n    const details = new ChangeDetails();\n\n    const prevMaskState = prevMask?.state;\n\n    // clone flags to prevent overwriting `_beforeTailState`\n    this.currentMask = this.doDispatch(appended, { ...flags });\n\n    // restore state after dispatch\n    if (this.currentMask) {\n      if (this.currentMask !== prevMask) {\n        // if mask changed reapply input\n        this.currentMask.reset();\n\n        if (insertValue) {\n          // $FlowFixMe - it's ok, we don't change current mask above\n          const d = this.currentMask.append(insertValue, {raw: true});\n          details.tailShift = d.inserted.length - prevValueBeforeTail.length;\n        }\n\n        if (tailValue) {\n          // $FlowFixMe - it's ok, we don't change current mask above\n          details.tailShift += this.currentMask.append(tailValue, {raw: true, tail: true}).tailShift;\n        }\n      } else {\n        // Dispatch can do something bad with state, so\n        // restore prev mask state\n        this.currentMask.state = prevMaskState;\n      }\n    }\n\n    return details;\n  }\n\n  _appendPlaceholder (...args: *): ChangeDetails {\n    const details = this._applyDispatch(...args);\n\n    if (this.currentMask) {\n      details.aggregate(this.currentMask._appendPlaceholder());\n    }\n\n    return details;\n  }\n\n   /**\n    @override\n  */\n  _appendEager (...args: *): ChangeDetails {\n    const details = this._applyDispatch(...args);\n\n    if (this.currentMask) {\n      details.aggregate(this.currentMask._appendEager());\n    }\n\n    return details;\n  }\n\n  currentMaskFlags (flags: AppendFlags): AppendFlags {\n    return {\n      ...flags,\n      _beforeTailState: flags._beforeTailState?.currentMaskRef === this.currentMask && flags._beforeTailState?.currentMask ||\n        flags._beforeTailState,\n    };\n  }\n\n  /**\n    @override\n  */\n  doDispatch(appended: string, flags: AppendFlags={}): ?Masked<*> {\n    return this.dispatch(appended, this, flags);\n  }\n\n  /**\n    @override\n  */\n  doValidate (flags: AppendFlags): boolean {\n    return super.doValidate(flags) && (\n      !this.currentMask || this.currentMask.doValidate(this.currentMaskFlags(flags))\n    );\n  }\n\n  /**\n    @override\n  */\n  doPrepare (str: string, flags: AppendFlags={}): string | [string, ChangeDetails] {\n    let [s, details] = normalizePrepare(super.doPrepare(str, flags));\n\n    if (this.currentMask) {\n      let currentDetails;\n      ([s, currentDetails] = normalizePrepare(super.doPrepare(s, this.currentMaskFlags(flags))));\n      details = details.aggregate(currentDetails);\n    }\n\n    return [s, details];\n  }\n\n  /**\n    @override\n  */\n  reset () {\n    this.currentMask?.reset();\n    this.compiledMasks.forEach(m => m.reset());\n  }\n\n  /**\n    @override\n  */\n  get value (): string {\n    return this.currentMask ? this.currentMask.value : '';\n  }\n\n  set value (value: string) {\n    super.value = value;\n  }\n\n  /**\n    @override\n  */\n  get unmaskedValue (): string {\n    return this.currentMask ? this.currentMask.unmaskedValue : '';\n  }\n\n  set unmaskedValue (unmaskedValue: string) {\n    super.unmaskedValue = unmaskedValue;\n  }\n\n  /**\n    @override\n  */\n  get typedValue (): any {\n    return this.currentMask ? this.currentMask.typedValue : '';\n  }\n\n  // probably typedValue should not be used with dynamic\n  set typedValue (value: any) {\n    let unmaskedValue = String(value);\n\n    // double check it\n    if (this.currentMask) {\n      this.currentMask.typedValue = value;\n      unmaskedValue = this.currentMask.unmaskedValue;\n    }\n    this.unmaskedValue = unmaskedValue;\n  }\n\n  get displayValue (): string {\n    return this.currentMask ? this.currentMask.displayValue : '';\n  }\n\n  /**\n    @override\n  */\n  get isComplete (): boolean {\n    return Boolean(this.currentMask?.isComplete);\n  }\n\n  /**\n    @override\n  */\n  get isFilled (): boolean {\n    return Boolean(this.currentMask?.isFilled);\n  }\n\n  /**\n    @override\n  */\n  remove (...args: *): ChangeDetails {\n    const details: ChangeDetails = new ChangeDetails();\n    if (this.currentMask) {\n      details.aggregate(this.currentMask.remove(...args))\n        // update with dispatch\n        .aggregate(this._applyDispatch());\n    }\n\n    return details;\n  }\n\n  /**\n    @override\n  */\n  get state (): MaskedDynamicState {\n    return {\n      ...super.state,\n      _rawInputValue: this.rawInputValue,\n      compiledMasks: this.compiledMasks.map(m => m.state),\n      currentMaskRef: this.currentMask,\n      currentMask: this.currentMask?.state,\n    };\n  }\n\n  set state (state: MaskedDynamicState) {\n    const {compiledMasks, currentMaskRef, currentMask, ...maskedState} = state;\n    this.compiledMasks.forEach((m, mi) => m.state = compiledMasks[mi]);\n    if (currentMaskRef != null) {\n      this.currentMask = currentMaskRef;\n      this.currentMask.state = currentMask;\n    }\n    super.state = maskedState;\n  }\n\n  /**\n    @override\n  */\n  extractInput (...args: *): string {\n    return this.currentMask ?\n      this.currentMask.extractInput(...args) :\n      '';\n  }\n\n  /**\n    @override\n  */\n  extractTail (...args: *): TailDetails {\n    return this.currentMask ?\n      this.currentMask.extractTail(...args) :\n      super.extractTail(...args);\n  }\n\n  /**\n    @override\n  */\n  doCommit () {\n    if (this.currentMask) this.currentMask.doCommit();\n    super.doCommit();\n  }\n\n  /**\n    @override\n  */\n  nearestInputPos(...args: *): number {\n    return this.currentMask ?\n      this.currentMask.nearestInputPos(...args) :\n      super.nearestInputPos(...args);\n  }\n\n  get overwrite (): ?boolean | 'shift' {\n    return this.currentMask ?\n      this.currentMask.overwrite :\n      super.overwrite;\n  }\n\n  set overwrite (overwrite: *) {\n    console.warn('\"overwrite\" option is not available in dynamic mask, use this option in siblings');\n  }\n\n  get eager (): boolean | 'remove' | 'append' {\n    return this.currentMask ?\n      this.currentMask.eager :\n      super.eager;\n  }\n\n  set eager (eager: *) {\n    console.warn('\"eager\" option is not available in dynamic mask, use this option in siblings');\n  }\n\n  get skipInvalid (): boolean {\n    return this.currentMask ?\n      this.currentMask.skipInvalid :\n      super.skipInvalid;\n  }\n\n  set skipInvalid (skipInvalid: boolean) {\n    if (this.isInitialized || skipInvalid !== Masked.DEFAULTS.skipInvalid) {\n      console.warn('\"skipInvalid\" option is not available in dynamic mask, use this option in siblings');\n    }\n  }\n\n  /**\n    @override\n  */\n  maskEquals (mask: any): boolean {\n    return Array.isArray(mask) &&\n      this.compiledMasks.every((m, mi) => {\n        if (!mask[mi]) return;\n\n        const { mask: oldMask, ...restOpts } = mask[mi];\n        return objectIncludes(m, restOpts) && m.maskEquals(oldMask);\n      });\n  }\n\n  /**\n    @override\n  */\n  typedValueEquals (value: any): boolean {\n    return Boolean(this.currentMask?.typedValueEquals(value));\n  }\n}\n\nMaskedDynamic.DEFAULTS = {\n  dispatch: (appended, masked, flags) => {\n    if (!masked.compiledMasks.length) return;\n\n    const inputValue = masked.rawInputValue;\n\n    // simulate input\n    const inputs = masked.compiledMasks.map((m, index) => {\n      m.reset();\n      m.append(inputValue, { raw: true });\n      m.append(appended, masked.currentMaskFlags(flags));\n      const weight = m.rawInputValue.length;\n\n      return {weight, index};\n    });\n\n    // pop masks with longer values first\n    inputs.sort((i1, i2) => i2.weight - i1.weight);\n\n    return masked.compiledMasks[inputs[0].index];\n  }\n};\n\n\nIMask.MaskedDynamic = MaskedDynamic;\n","import createMask from './factory';\nimport IMask from '../core/holder.js';\n\n\n/** Mask pipe source and destination types */\nexport\nconst PIPE_TYPE = {\n  MASKED: 'value',\n  UNMASKED: 'unmaskedValue',\n  TYPED: 'typedValue',\n};\n\n/** Creates new pipe function depending on mask type, source and destination options */\nexport\nfunction createPipe (mask, from=PIPE_TYPE.MASKED, to=PIPE_TYPE.MASKED) {\n  const masked = createMask(mask);\n  return (value) => masked.runIsolated(m => {\n    m[from] = value;\n    return m[to];\n  });\n}\n\n/** Pipes value through mask depending on mask type, source and destination options */\nexport\nfunction pipe (value, ...pipeArgs) {\n  return createPipe(...pipeArgs)(value);\n}\n\n\nIMask.PIPE_TYPE = PIPE_TYPE;\nIMask.createPipe = createPipe;\nIMask.pipe = pipe;\n","import IMask from './imask.js';\nexport { default as InputMask } from './controls/input.js';\n\nexport { default as Masked } from './masked/base.js';\nexport { default as MaskedPattern } from './masked/pattern.js';\nexport { default as MaskedEnum } from './masked/enum.js';\nexport { default as MaskedRange } from './masked/range.js';\nexport { default as MaskedNumber } from './masked/number.js';\nexport { default as MaskedDate } from './masked/date.js';\nexport { default as MaskedRegExp } from './masked/regexp.js';\nexport { default as MaskedFunction } from './masked/function.js';\nexport { default as MaskedDynamic } from './masked/dynamic.js';\nexport { default as createMask } from './masked/factory.js';\nexport { default as MaskElement } from './controls/mask-element.js';\nexport { default as HTMLMaskElement } from './controls/html-mask-element.js';\nexport { default as HTMLContenteditableMaskElement } from './controls/html-contenteditable-mask-element.js';\nexport { createPipe, pipe, PIPE_TYPE } from './masked/pipe.js';\n\nexport { default as ChangeDetails } from './core/change-details.js';\n\n\ntry {\n  globalThis.IMask = IMask;\n} catch(e) {}\nexport default IMask;\n"],"names":["ChangeDetails","constructor","details","Object","assign","this","inserted","rawInserted","skip","tailShift","aggregate","offset","length","isString","str","String","DIRECTION","NONE","LEFT","FORCE_LEFT","RIGHT","FORCE_RIGHT","escapeRegExp","replace","normalizePrepare","prep","Array","isArray","objectIncludes","b","a","i","arrA","arrB","dateA","Date","dateB","getTime","regexpA","RegExp","regexpB","toString","keys","prototype","hasOwnProperty","call","ActionDetails","value","cursorPos","oldValue","oldSelection","slice","startChangePos","start","Math","min","insertedCount","substr","removedCount","max","end","removed","head","substring","tail","removeDirection","ContinuousTailDetails","arguments","undefined","from","stop","extend","appendTo","masked","append","_appendPlaceholder","state","unshift","beforePos","shiftChar","shift","IMask","el","opts","InputMask","Masked","_value","_update","DEFAULTS","isInitialized","updateOptions","withValueRefresh","bind","reset","resolve","input","doCommit","unmaskedValue","typedValue","doParse","doFormat","rawInputValue","extractInput","raw","displayValue","isComplete","isFilled","nearestInputPos","direction","fromPos","toPos","extractTail","appendTail","_appendCharRaw","ch","_appendChar","flags","checkTail","consistentState","doPrepare","consistentTail","appended","doValidate","beforeTailState","overwrite","tailDetails","_appendEager","Error","_beforeTailState","ci","d","doSkipInvalid","eager","remove","fn","_refreshing","rawInput","ret","indexOf","runIsolated","_isolated","skipInvalid","prepare","validate","parent","commit","format","parse","splice","deleteCount","tailPos","eagerRemove","oldRawValue","forceDirection","valLength","maskEquals","mask","typedValueEquals","tval","EMPTY_VALUES","includes","maskedClass","MaskedRegExp","MaskedPattern","MaskedDate","Number","MaskedNumber","MaskedDynamic","Function","MaskedFunction","console","warn","createMask","MaskedClass","v","DEFAULT_INPUT_DEFINITIONS","PatternInputDefinition","isOptional","placeholderChar","displayChar","lazy","maskOpts","_objectWithoutPropertiesLoose","_excluded","Boolean","maxPos","boundPos","PatternFixedDefinition","isFixed","isUnmasking","_isRawInput","appendEager","isResolved","char","ChunksTailDetails","chunks","map","join","tailChunk","lastChunk","extendLast","push","firstTailChunk","blockIndex","chunk","lastBlockIter","_mapPosToBlock","chunkBlock","index","_stops","_blocks","remainChars","c","props","cstate","chunkShiftPos","PatternCursor","pos","_log","ok","block","_blockStartPos","s","pushState","popState","pop","bindBlock","_pushLeft","_this$block","_pushRight","pushLeftBeforeFilled","pushLeftBeforeInput","pushLeftBeforeRequired","pushRightBeforeFilled","pushRightBeforeInput","pushRightBeforeRequired","search","super","definitions","_rebuildMask","defs","_maskedBlocks","pattern","unmaskingBlock","optionalBlock","_defs$char","_defs$char2","blocks","p","bNames","filter","bName","sort","maskedBlock","isInput","STOP_CHAR","ESCAPE_CHAR","def","maskedState","forEach","bi","every","reduce","_this$_mapPosToBlock","startBlockIndex","blockIter","_flags$_beforeTailSta","_flags$_beforeTailSta2","blockDetails","chunkTail","_forEachBlocksInRange","bFromPos","bToPos","blockChunk","_findStopBefore","_","stopBefore","si","toBlockIndex","startBlockIter","endBlockIndex","args","bDetails","accVal","blockStartPos","fromBlockIter","toBlockIter","isSameBlock","fromBlockStartPos","fromBlockEndPos","removeDetails","cursor","name","maskedBlocks","indices","gi","InputDefinition","FixedDefinition","MaskedRange","_matchFrom","maxLength","to","fromStr","padStart","toStr","sameCharsCount","repeat","boundaries","minstr","maxstr","placeholder","num","match","padEnd","autofix","nextVal","GET_DEFAULT_BLOCKS","Y","getFullYear","m","getMonth","getDate","bk","date","isDateExist","day","month","year","split","MaskElement","selectionStart","_unsafeSelectionStart","e","selectionEnd","_unsafeSelectionEnd","select","_unsafeSelect","isActive","bindEvents","handlers","unbindEvents","HTMLMaskElement","_handlers","rootElement","_this$input$getRootNo","_this$input$getRootNo2","_this$input","getRootNode","document","activeElement","setSelectionRange","event","_toggleEventHandler","EVENTS_MAP","handler","removeEventListener","addEventListener","selectionChange","drop","click","focus","HTMLContenteditableMaskElement","root","selection","getSelection","anchorOffset","focusOffset","createRange","range","setStart","firstChild","setEnd","lastChild","removeAllRanges","addRange","textContent","isContentEditable","tagName","_listeners","_unmaskedValue","_saveSelection","_onInput","_onChange","_onDrop","_onFocus","_onClick","alignCursor","alignCursorFriendly","_bindEvents","updateValue","_this$masked","updateControl","val","_unbindEvents","_fireEvent","ev","_len","_key","listeners","l","_cursorChanging","_changingCursorPos","_selection","newUnmaskedValue","newValue","newDisplayValue","isChanged","_fireChangeEvents","restOpts","updateMask","updateOpts","updateCursor","_delayUpdateCursor","_abortUpdateCursor","setTimeout","_inputEvent","clearTimeout","on","off","hIndex","preventDefault","stopPropagation","destroy","MaskedEnum","enum","some","_updateRegExps","allowNegative","scale","concat","radix","_numberRegExp","_mapToRadixRegExp","mapToRadix","_thousandsSeparatorRegExp","thousandsSeparator","_removeThousandsSeparators","_insertThousandsSeparators","parts","prepCh","_separatorsCount","extendOnSeparators","count","_separatorsCountFromSlice","_adjustRangeWithSeparators","prevBeforeTailValue","prevBeforeTailSeparatorsCount","appendDetails","beforeTailValue","beforeTailSeparatorsCount","_findSeparatorAround","searchFrom","separatorPos","separatorAroundFromPos","separatorAroundToPos","valueBeforePos","valueAfterPos","separatorAtLeftPos","separatorAtLeftEndPos","separatorAtRightPos","valid","number","isNaN","validnum","formatted","normalizeZeros","_normalizeZeros","padFractionalZeros","_padFractionalZeros","sign","zeros","test","dropFractional","UNMASKED_RADIX","n","signed","toLocaleString","useGrouping","maximumFractionDigits","currentMask","compiledMasks","_applyDispatch","currentMaskFlags","prevValueBeforeTail","inputValue","insertValue","_rawInputValue","tailValue","prevMask","prevMaskState","doDispatch","currentMaskRef","dispatch","currentDetails","_this$currentMask","_this$currentMask2","_this$currentMask3","_this$currentMask4","mi","_mask$mi","oldMask","_excluded2","_this$currentMask5","inputs","weight","i1","i2","PIPE_TYPE","MASKED","UNMASKED","TYPED","createPipe","pipe","pipeArgs","globalThis"],"mappings":"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"}